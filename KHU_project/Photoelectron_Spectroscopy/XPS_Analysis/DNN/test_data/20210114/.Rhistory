model
summary(model)
anova(model)
(72.431+30.137_11.367)/3
(72.431+30.137+11.367)/3
length(Cars93)
length(Cars93$RPM)
SST<-3063.8+1274.8+480.8+3764.6
SSE<-3764.6
1-SSE/SST
1-(92)*480.84/SST
SST
1-(2)*480.84/SST
1-(92)*42.30/SST
sqrt(42.30)
sqrt(42.30)/sqrt(sum(Cars93$RPM-mean(Cars93$RPM)))
Cars93$RPM
sqrt(42.30)/sqrt(sum((Cars93$RPM-mean(Cars93$RPM))^2))
4.305387/1.324961
pt(3.249, 92)
1-pt(3.249, 92)
1-pt(3.249, 89)
1-pt(3.249, 91)
library(boot)
data(nodal)
a<-c(2, 4, 6, 7)
data<-nodal[, a]
glmModel<-glm(r~., data=data, family='binomial')
glmModel
data
anova(glmModel)
summary(glmModel)
str(data)
3.0518/0.8420
pnorm(-3.624)*2
pnorm(2.255)*2
pnorm(2.460)*2
pnorm(2.460, lower.tail =F)*2
x
y
glm(y~x)
summary(glm(y~x))
anova(glm(y~x))
sqrt(398.15)
sqrt(398.15)/sqrt(sum((x-mean(x))^2))
summary(glmModel)
pchisq(70.252, 52, lower.tail=F)
pchisq(49.180, 49, lower.tail=F)
glm(y~x, family='binomial')
gl<-glm(y~x, family='binomial')
y
x
?glm
glm(y~x)
y<-c(0, 0, 0, 0, 0, 1, 1, 1, 1)
glm(y~x, family="binomial")
gl<-glm(y~x, family="binomial")
summary(gl)
x<-1:9
gl<-glm(y~x, family="binomial")
summary(gl)
p<-function(x, y, z){
1/(1+exp(3.0518-1.6453*x-1.9116*y-1.6378*z))
}
library(boot)
head(nodel)
head(nodea)
head(nodal)
p(1, 1, 1)
str(nodal)
57.18-2*53
48.82/2
exp(24.41)
(57.18-6)/2
exp(-25.59)
data<-nodal[, c(2, 4, 6, 7)]
mul<-1
for(i in 1:53){
mul<-mul*p(nodal[i, "stage"], nodal[i, "xray"], nodal[i, "acid"])
}
mul
mul<-1
for(i in 1:53){
mul<-mul*p(nodal[i, "stage"], nodal[i, "xray"], nodal[i, "acid"])
}
mul
log(mul)
?AIC
p1<-function(x, y, z){
1/(1+exp(4.0518-1.6453*x-1.9116*y-1.6378*z))
}
mul<-1
for(i in 1:53){
mul<-mul*p1(nodal[i, "stage"], nodal[i, "xray"], nodal[i, "acid"])
}
mul
(73.06877*2+2*3)
(73.06877*2+2*3)/3
(73.06877*2+2*2)/3
?BIC
?step
?cooks.distance
?acf
?pacf
?SMA
?SMA
library(tseries)
?SMA
?HoltWinters
?MA
?TTR
tseries::SMA
?SMA
?HoltWinters
?diff
x<-c(5, 3, 4, 3, 8, 9, 4, 8, 1)
diff(x)
x_ts<-ts(x)
diff(x_ts)
diff(x_ts, 2)
diff(x_ts, lag=2)
x_ts
diff(x_ts, differences=2)
library(forecast)
?arima
?forecast
?arima
library(tseries)
king<-scan(("http://robjhyndman.com/tsdldata/misc/kings.dat"))
king<-scan("http://robjhyndman.com/tsdldata/misc/kings.dat")
king<-scan("http://robjhyndman.com/tsdldata/misc/kings.dat", skip=3)
king
king.arima<-arima(king, order=c(0, 1, 1))
king.arima
king.arima$coef
king.arima$call
king.arima$code
king.arima$arma
forecast(king.arima)
length(king)
forecast(king.arima, h=5)
?decompose
library(MASS)
?cmdscale
eurodist
loc<-cmdscale(eurodist)
str(eurodist)
loc
plot(loc[, 1], loc[, 2])
plot(loc[, 1], loc[, 2], asp=1)
?isoMDS
?sammon
data(swiss)
swiss
swiss.x<-as.matrix(swiss[, 1])
swiss.x
swiss.dist<-dist(swiss.x)
swiss.dist
swiss.dist
swiss.x
diff(swiss.x)
cmdscale(swiss.dist)
cmd<-cmdscale(swiss.dist)
iso<-isoMDS(swiss.dist)
swiss.dist
isoMDS(swiss.dist)
swiss.dist[22, 36]
dim(swiss.dist)
swiss.x<-as.matrix(swis[, -1])
swiss.x<-as.matrix(swiss[, -1])
swiss.x
swiss.dist<-dist(swiss.x)
swiss.dist
iso<-isoMDS(swiss.dist)
cmd<-cmdscale(swiss.dist)
iso
plot(iso[, 1], iso[, 2])
iso
plot(iso$points)
plot(cmd)
cmd
install.packages("scatterplot3d")
library(scatterplot3d)
?isoMDS
?sammon
?isoMDS
?prcomp
?princomp
library(datasets)
data("USArrests")
USArrests
?screeplot
screeplot(princomp(USArrests, cor=# Sat Feb 12 14:14:41 2022 ------------------------------
))
US.prin<-princomp(USArrests)
US.prin
US.prin<-princomp(USArrests, cor=T)
US.prin
summary(US.prin)
screeplot(US.prin)
US.prin$sdev
US.prin$sdev[1]/US.prin$sdev[2]
US.prin$sdev[1]
0.6200604/0.2474413
US.prin$sdev[1]^2/US.prin$sdev[2]^2
US.prin$sdev^2
screeplot(US.prin, type='lines')
loadingNamespaceInfo()
?loading
?loadings
US.prin$loadings
?biplot
?t.test
?printcomp
?princomp
college
data(college)
data(iris)
pr1<-princomp(iris)
data("USArrests")
prin1<-princomp(USArrests, cor=T)
prin2<-princomp(USArrests)
prin1
prin2
summary(prin1)
summary(prin2)
loading(prin1)
loadings(prin1)
loadings(prin2)
USArrests
3162.7/7177.9*100
?cast
library(reshape)
?cast
melt(iris)
?melt
melt(iris, c(Species))
melt(iris, c("Species"))
head(melt(iris, c("Species")))
iris_tmp<-irir[c(1, 4),]
iris_tmp<-iris[c(1, 4),]
ir<-melt(iris_tmp)
ir<-melt(iris_tmp, id=Species)
iris_melt
iris_tmp
iris_tmp<-iris[, c(1, 4)]
iris_tmp
iris_melt<-melt(iris_tmp, item="Species")
iris_melt<-melt(iris_tmp, id="Species")
iris_tmp
head(iris_tmp)
iris_tmp<-iris[, c(1, 5)]
head(iris_tmp)
iris_melt<-melt(iris_tmp, id="Species")
iris_emlt
iris_melt
cast(iris_melt, Species~.)
cast(iris_melt, Species~., mean)
?ftable
?reshape::cast
library(ggplot2)
data(ChickWeight)
ggplot(ChickWeight, aes(x=Time, y=Weight, col=Diet, group=Chick))
ggplot(ChickWeight, aes(x=Time, y=weight, col=Diet, group=Chick))+geom_line()
head(ChickWeight)
unique(ChickWeight$group)
ChickWeight$group
unique(ChickWeight$Chick)
unique(ChickWeight$Diet)
ggplot(ChickWeight, aes(x=Time, y=weight, col=Diet, group=Chick))+geom_point(alpha=0.3)
?geom_point
ggplot(ChickWeight, aes(x=Time, y=weight, col=Diet, group=Chick))+geom_smooth(alpha=0.3, size=3)
ggplot(ChickWeight, aes(x=Time, y=weight, col=Diet))+geom_smooth(alpha=0.3, size=3)
ggplot(ChickWeight, aes(x=Time, y=weight, col=Diet))+geom_smooth(alpha=0.3, size=4)
ggplot(ChickWeight, aes(x=Time, y=weight, col=Diet))+geom_smooth(alpha=0.3, size=2)
ggplot(ChickWeight, aes(x=Time, y=weight, col=Diet))+geom_smooth(alpha=0.3, size=1)
subset(ChickWeight, Time=21)
sub<-subset(ChickWeight, Time=21)
sub
subset(Chickweight, time=21)
subset(ChickWeight, time=21)
ChickWeight
subset(ChickWeight, Time==21)
ggplot(subset(ChickWeight, Time==21), aes(x=weight, fill=Diet))+geom_histogram()
ggplot(subset(ChickWeight, Time==21), aes(x=weight, fill=Diet))+geom_histogram(binwidth=50, col='black')
ggplot(subset(ChickWeight, Time==21), aes(x=weight, fill=Diet))+geom_histogram(binwidth=50, col='black')+facet_grid(Diet~.)
ggplot(subset(ChickWeight, Time=21), aes(x=weight, fill=Diet))+geom_histogram(binwidth=50, col='black')+facet_grid(Diet~.)
ggplot(subset(ChickWeight, Time==21), aes(x=weight, fill=Diet))+geom_histogram(binwidth=50, col='black')+facet_grid(Diet~.)
ggplot(ChickWeight, aes(x=weight, fill=Diet))+geom_histogram(binwidth=50, col='black')+facet_grid(Diet~.)
data(mtcars)
qplot(wt, mpg, col=hp, data=mtcars)
qplot(wt, mpg, col=hp, data=mtcars)+coord_cartesia(ylim=c(0, 40))+scale_colour_continuous(breaks=c(100, 300))+guides(col="colourbar")
qplot(wt, mpg, col=hp, data=mtcars)+coord_cartesian(ylim=c(0, 40))+scale_colour_continuous(breaks=c(100, 300))+guides(col="colourbar")
install.packages("ggplot2movies")
library(ggplot2movies)
m=ggplot(movies, aes(x=rating))
head(movies)
m+geom_histogram(fill=count)
m+geom_histogram(fill=..count..)
m+geom_histogram(aes(fill=..count..))
m+geom_histogram()
m+geom_histogram(col=length)
unique(moves$year)
unique(movies$year)
m+geom_histogram(col="length")
m+geom_histogram(col=aes("length"))
m+geom_histogram(col=aes(col="length"))
m+geom_histogram(col=aes(col=length))
m+geom_histogram(col=aes(col=year))
m+geom_histogram(col=aes(col=year), binwidth=30)
m+geom_histogram(col=aes(col=year), binwidth=10)
m+geom_histogram(aes(fill=length))
m+geom_histogram(aes(fill=year))
m+geom_histogram(aes(fill=..year..))
m+geom_histogram(aes(fill=..count..))
m+geom_histogram(aes(fill=rating))
m+geom_histogram(aes(fill=..rating..))
m+geom_histogram(aes(fill=..count..))
data(diamonds)
k<-ggplot(diamonds, aes(carat, ..density..))+geom_histogram(binwidth=20)
k
k+facet_grid(~.cut)
k+facet_grid(.~cut)
diamonds$carat
k<-ggplot(diamonds, aes(carat, ..density..))+geom_histogram(binwidth=0.2)
k
k+facet_grid(.~cut)
?desc
library(plyr)
data(diamonds)
library(ggplot2)
data(diamonds)
w<-ggplot(diamonds, aes(clarity, y=..count.., fill=cut))
w+geom_bar()
w<-ggplot(diamonds, aes(clarity, fill=cut))
w+geom_bar()
w<-ggplot(diamonds, aes(clarity, y=..count.., fill=cut))
w+geom_bar()
w+geom_bar(aes(order=desc(cut)))
w<-ggplot(diamonds, aes(clarity, y=..count.., fill=cut))
w+geom_bar(order=desc(cut))
desc(cut)
desc
library(plyr)
w+geom_bar(aes(order=desc(cut)))
head(diamonds)
diamonds$cut
w+geom_bar()
p<-ggplot(mtcars, aes(wt, mpg))
p+geom_point(size=4)
p<-ggplot(mtcars, aes(wt, mpg, col=factor(cyl)))
p+geom_point(size=4)
p<-ggplot(mtcars, aes(wt, mpg))
p+geom_point(size=4, aes(col=factor(cyl)))
p<-ggplot(mtcars, aes(wt, mpg, col=factor(cyl)))
p+geom_point(size=4)
p<-ggplot(matcars)
p<-ggplot(mtcars)
p+geom_point(size=4, aes(wt, mpg, col=factor(cyl)))
p+geom_point(size=4, aes(wt, mpg, size=factor(cyl)))
p+geom_point(size=4, aes(wt, mpg, size=factor(qsec)))
p+geom_point(aes(wt, mpg, size=factor(qsec)))
p+geom_point(aes(wt, mpg, size=qsec))
?geom_vline
dmod<-lm(price~cut, data=diamonds)
cuts<-data.frame(cut=unique(diamonds$cut), predict(dmod, data.frame(cut=unique(diamonds$cut), se=T)))
predict(dmod, data.frame(cut=unique(diamonds$cut), se=T))
predict(dmod, data.frame(cut=unique(diamonds$cut), se=T))
pre<-predict(dmod, data.frame(cut=unique(diamonds$cut), se=T))
pre$fit
pre
pre[c("fit", "se.fit")]
pre<-predict(dmod, data.frame(cut=unique(diamonds$cut)))
pre
pre<-predict(dmod, data.frame(cut=unique(diamonds$cut)), se=T)
pre
se<-ggplot(cuts, aes(x=cut, y=fit, ymin=fit-se.fit, ymax=fit+se.fit, col=cut))
se+geom_point()
se_geom_pointrange
se+geom_pointrange
cuts<-data.frame(cut=unique(diamonds$cut), predict(dmod, data.frame(cut=unique(diamonds$cut)), se=T)[c("fit", "se.fit")])
cuts
se<-ggplot(cuts, aes(x=cut, y=fit, ymin=fit-se.fit, ymax=fit+se.fit), col=cut)
se+geom_point()
se+geom_range()
se+geom_pointrange()
cuts
colnames(cuts)<-c('cut', 'fit', 'fit2')
se<-ggplot(cuts, aes(x=cut, y=fit, ymin=fit-se.fit, ymax=fit+se.fit), col=cut)
se+geom_pointrange()
cuts<-data.frame(cut=unique(diamonds$cut), predict(dmod, data.frame(cut=unique(diamonds$cut)), se=T)[c("fit", "se.fit")])
se<-ggplot(cuts, aes(x=cut, y=fit, ymin=fit-se.fit, ymax=fit+se.fit), col=cut)
se+geom_pointrange()
colnames(cuts)<-c('cut', 'fit1', 'fit2')
se<-ggplot(cuts, aes(x=cut, y=fit, ymin=fit-se.fit, ymax=fit+se.fit), col=cut)
p<-ggplot(mtcars, aes(wt, mpg))+geom_point()
p+annotate("rect", xmin=2, xmax=3.5, ymin=2, ymax=25, fill="dark grey", alpha=0.3)
?axis
?mtext
?pretty
pretty(c(1:10), 10)
pretty(c(1:10), 3)
range(1:10)
pretty(range(1:10), 2)
pretty(range(1:10), 4)
pretty(range(1:10), 10)
pretty(range(1:10), 9)
pretty(range(1:10), 8)
pretty(range(1:10), 7)
pretty(range(1:10), 5)
time<-seq(7000, 3400, -200)
pop<-c(200, 400time<-seq(7000, 3400, -200)
pop<-c(200, 400, 450, 500, 300, 100, 400, 700, 830, 1200, 400, 350, 200, 700, 370, 800, 200, 100, 120)
grp<-c(2, 5, 8, 3, 2, 2, 4, 7, 9, 4, 4, 2, 2, 7, 5, 12, 5, 4, 4)
med<-c(1.2, 1.3, 1.2, 0.9, 2.1, 1.4, 2.9, 3.4, 2.1, 1.1, 1.2, 1.5, 1.2, 0.9, 0.5, 3.3, 2.2, 1.1, 1.2))
time<-seq(7000, 3400, -200)
pop<-c(200, 400, 450, 500, 300, 100, 400, 700, 830, 1200, 400, 350, 200, 700, 370, 800, 200, 100, 120)
grp<-c(2, 5, 8, 3, 2, 2, 4, 7, 9, 4, 4, 2, 2, 7, 5, 12, 5, 4, 4)
med<-c(1.2, 1.3, 1.2, 0.9, 2.1, 1.4, 2.9, 3.4, 2.1, 1.1, 1.2, 1.5, 1.2, 0.9, 0.5, 3.3, 2.2, 1.1, 1.2)
plot(time, pop, axes=F, xlim=range(time),  ylim=c(0, max(pop)), xlab="", ylab="", type='l', col="black", main="")
points(time, pop, pch=20, col="black")
plot(time, pop, axes=F, xlim=c(7000, 3400),  ylim=c(0, max(pop)), xlab="", ylab="", type='l', col="black", main="")
points(time, pop, pch=20, col="black")
plot(time, pop, axes=F, xlim=range(time),  ylim=c(0, max(pop)), xlab="", ylab="", type='l', col="black", main="")
points(time, pop, pch=20, col="black")
plot(time, pop, axes=F, xlim=c(7000, 3400),  ylim=c(0, max(pop)), xlab="", ylab="", type='l', col="black", main="")
points(time, pop, pch=20, col="black")
axis(2, ylim=c(0, max(pop)), col="black", lwd=2)
mtext(2, text="Population", line=2)
par(new=T)
plot(time, grp, axes=F, xlim=c(7000, 3400), ylim=c(0, max(grp)), xlab="", ylab="", main="", type='l', lty=2, lwd=2, col="black")
point(time, grp)
points(time, grp, pch=20, col="black")
axis(2, ylim=c(0, max(grp)), col="black", line=3.5)
?legend
library(aplpack)
?aplpack::stem.leaf
?faces
?stars
library(googleVis)
gvisMotionChart()
?gvisMotionChart()
data(Fruits)
M1<-gvisMotionChart(Fruits, idvar="Fruit", timevar="Year")
?gvisGeoChart
data(Andrees)
data(Andreew)
data(Andrew)
Andrew
library(vcd)
?mosaic
?mosaic
data(Titanic)
Titanic
mosaic(Titanic)
mosaic(Titanic, shade=T, legend=T)
?strucplot
strucplot(Titanic, pop=F)
strucplot(Titanic, pop=T)
strucplot(Titanic, pop=F)
grid.edit("rect:Class=1st, Sex=Male, Age=Adult, Survived=Yes", gp=gpar(fill="red"))
strucplot(Titanic, pop=FALSE)
grid.edit("rect:Class=1st, Sex=Male, Age=Adult, Survived=Yes", gp=gpar(fill="red"))
library(shiny)
?selectInput
?write.csv
setwd("/Users/csian/Desktop/CP/Photoelectron_Spectroscopy/XPS_Analysis/DNN/NOVA_20210114_15/20210114")
read.csv("wide_Au_#1_1", sep="\t")
read.csv("wide_Au_#1_1", head=T)
df<-read.table("wide_Au_#1_1")
df
?read.csv
read.csv("wid_Au_#1_1", skip=3)
read.csv("wide_Au_#1_1", skip=3)
df<-read.csv("wide_Au_#1_1", skip=3)
head(df)
class(df)
dim(df)
df<-read.csv("wide_Au_#1_1", skip=3, sep='\t')
df
dim(df)
colname(df)
colnames(df)
length(colnames(df))
library(ggplot)
library(ggplot2)
p<-ggplot(df, aes("Binding.Energy.eV", "Intensity.cps"))
p+geom_point(alpha=0.3)
p
p+geom_line()
p+geom_line(aes("Binding.Energy.eV", "Intensity.cps")
)
plot(df$Binding.Energy.eV., df$Intensity.cps.)
p<-ggplot(df, aes("Binding.Energy.eV.", "Intensity.cps."))
p+geom_point(alpha=0.3)
str(df)
colnames(df)<-c("KE", "BE", "Int", "Tran")
df
head(df)
ggplot(df, aes(x=KE, y=Int))
ggplot+geom_point()
p<-ggplot+geom_point()
p+geom_point()
p
p<-ggplot(df, aes(x=KE, y=Int))
p+geom_point(alpha=0.3)
p+geom_point(alpha=0.3)+geom_line()
length(df)
dim(df)
p<-ggplot(df, aes(x=KE, y=Tran))
p+geom_line
p+geom_line()
