return(diff)
}
EFn_EFi(6.6e16, 2.5e14)
EFi_EFp(1e10^2/6.6e16, 2.5e14)
EFi_EFp(1e10^2/6.6e16, 2.5e14)+0.4064
4.9e20*5e-7
2.45*14
400*0.24*0.1e-6
400*0.24*0.1e-6*1e4
# only for T=300
V_bi<-function(N_a, N_d, n_i=1e10){
V_bi<-k_B*300/eV_J*log(N_a*N_d/n_i^2)
return(V_bi)
}
V_bi(7e16, 1e16)
V_bi(6e16, 4e16)
# [cm]에 1e4 을 곱하면, [micro meter] 단위로 변환
W_pn<-function(N_a, N_d, V_bi=0.635, epsi_r=12){
width<-x_n(N_a, N_d, V_bi, epsi_r)+x_p(N_a, N_d, V_bi, epsi_r)
return(width)
}
W_pn(6e16, 4e16, 0.797)
W_pn(6e16, 4e16, 0.797)*1e4
W_pn(7e16, 1e16, 0.797)*1e4
W_pn(6e16, 4e16, 0.797)*1e4
# E_max [V/cm]
E_max_pn<-function(N_a, N_d, n_i=1e10, epsi_r=12){
V_bi<-V_bi(N_a, N_d, n_i)
W_pn<-W_pn(N_a, N_d, V_bi, epsi_r)
E_max<--2*V_bi/W_pn
return(E_max)
}
E_max_pn(4e16, 10e16)
E_max_pn(4e16, 10e16)/1e5
E_max_pn(4e16, 10e16)/1e4
8.35+4
E_max_pn(4e16, 1e16)/1e4
E_max_pn(4e16, 10e16)/1e4
p_n(4.4e16, 0.18)
p_n(4.4e16, 0.18)/1e6
2.39*6
4.8e-11*(exp(eV_J*0.7/(k_B*300))-1)
26.93*5.4e-4
26.93*5.4e-4*1e3
eV_J*10.35*1.7e16/100e-4
EFn_EFi(6.6e16, 2.5e14)
EFi_EFp(1.5e3, 2.5e14)
400*0.24*0.1e-6
400*0.24*0.1e-6*1e4
# w_pn [cm]
# 1 [cm] = 1e-2 [m] = 1e4 [micro meter]
# [cm]에 1e4 을 곱하면, [micro meter] 단위로 변환
W_pn<-function(N_a, N_d, V_bi=0.635, epsi_r=12){
width<-x_n(N_a, N_d, V_bi, epsi_r)+x_p(N_a, N_d, V_bi, epsi_r)
return(width)
}
W_pn(6e16, 4e16, 0.797)
W_pn(6e16, 4e16, 0.797)*1e4
E_max_pn<-function(N_a, N_d, n_i=1e10, epsi_r=12){
V_bi<-V_bi(N_a, N_d, n_i)
W_pn<-W_pn(N_a, N_d, V_bi, epsi_r)
E_max<--2*V_bi/W_pn
return(E_max)
}
E_max_pn(4e16, 10e16)
E_max_pn(4e16, 10e16)/1e5
E_max_pn(4e16, 10e16)/1e4
p_n(4.4e16, 0.18)
p_n(4.4e16, 0.18)/1e5
p_n(4.4e16, 0.18)/1e6
2.38*6
y=sin(x)
plot(sin())
plot(x, sin(x))
plot(sin(x))
x<-seq(-10, 10, 0.1)
plot(x, sin(x))
plot(x, sin(x), type='l')
par(new=T)
plot(x, sin(x-1/2pi))
plot(x, sin(x-1/(2*pi)))
plot(x, sin(x))
plot(x, sin(x), type='l')
plot(x, sin(x-1/(2*pi)), type='l' ,col='red')
plot(x, sin(x), type='l')
plot(x, sin(x-1/(2*pi)), type='l' ,col='red')
plot(x, sin(x), type='l')
plot(x, sin(x-1/(2*pi)), type='l' ,col='red')
plot(x, sin(x), type='l')
plot(x, sin(x-1/(2*pi)), type='l' ,col='red')
plot(x, sin(x), type='l')
par(new=T)
plot(x, sin(x-1/(2*pi)), type='l' ,col='red')
plot(x, sin(x), type='l', col='blue')
par(new=T)
plot(x, sin(10*x), tpye='l', col='red', lty='')
plot(x, sin(10*x), type='l', col='red', lty='')
x
plot(x, sin(10*x), type='l', col='red')
plot(x, sin(10*x)+sin(x), type='l')
plot(x, sin(x)/x)
plot(x, sin(2*x)/x)
0.5/0.08
0.25/0.04
a<-(sin(x)/x)^2
a
rm(a)
one<-(sin(x)/x)^2
two<-(sin(6.25*x))^2
x
plot(x, one, type='l', lty=2, col='red')
line(x, two, type='l', lty=2)
line(x, two)
lines(x, two, type='l', lty=2, col='blue')
plot(x, one+two, tpye='l')
plot(x, one+two, type='l')
plot(x, one+two, type='l', xlab='Position', ylab='Intensity', yaxt='n', xaxt='n')
seq(-10, 10, 0.001)
x<-seq(-10, 10, 0.001)
one<-(sin(x)/x)^2
two<-(sin(6.25*x))^2
plot(x, one+two, type='l', xlab='Position', ylab='Intensity', yaxt='n', xaxt='n')
20/1e-6
20/1e-7
sin(14)
v1<-c(1, 2, 3)
v2<-c(7, 8, 9)
s<-v1+2*v2
s
sin(s)
?plot
44000/500000
0%8
0/8
0//8
0%%8
1%%8
-sin(1)-cos(1)
-sin(0)-cos(0)
38111-2181
3811-2181
156*50
path<-/Users/csian/Desktop/CP/Photoelectron_Spectroscopy/XPS_Analysis/Generator/desperate_test/test_raw
path<-'/Users/csian/Desktop/CP/Photoelectron_Spectroscopy/XPS_Analysis/Generator/desperate_test/test_raw/'
sio_raw<-paste(path, 'SiO2')
sio_rwa
sio_raw
sio_raw<-paste(path, 'SiO2', sep='')
sio_raw
sio_raw<-read.csv(file=sio_raw, sep=' ')
sio_raw<-sio_raw[, c(1, 2)]
sio_raw
path
sio_40<-paste(path, 'SiO_40', sep='')
sio_40<-read.csv(file=sio_40, sep=' ')
sio_40<-paste(path, 'SiO2_40', sep='')
sio_40<-read.csv(file=sio_40, sep=' ')
sio_40<-sio_40[, c(1, 2)]
sio_40
feo_raw<-paste(path, 'FeO', sep='')
feo_raw<-read.csv(file=feo_raw, sep=' ')
feo_raw<-feo_raw[, c(1, 2)]
feo_40<-paste(path, 'FeO_40', sep='')
feo_40<-read.csv(file=feo_40, sep=' ')
feo_40<-feo_40[, c(1, 2)]
feo_raw
feo_raw[, 1]
feo_raw[, 2]
feo_diff<-feo_40[, 2]-feo_raw[, 2]
sio_diff<-sio_40[, 2]-sio_raw[, 2]
feo_diff
sio_diff
plot(feo_diff)
plot(feo_diff, type='l')
plot(feo_diff, type='l', ylim=c(0, 1))
plot(feo_diff, type='l', ylim=c(0, 1e-10))
plot(feo_diff, type='l'
)
plot(feo_diff, type='l', ylim=c(0, 1e-4))
plot(feo_diff, type='l', ylim=c(0, 1e-5))
par(new=T)
plot(sio_diff, tpye='l', ylim=c(0, 1e-5), col='blue')
plot(sio_diff, type='l', ylim=c(0, 1e-5), col='blue')
par(new=T)
plot(feo_diff, type='l', ylim=c(0, 1e-5))
max(sio_diff)
path<-'/Users/csian/Desktop/CP/Photoelectron_Spectroscopy/XPS_Analysis/Generator/desperate_test/test_raw'
file_name<-'SiO2'
conta<-c(5, 10, 15, 20, 30, 40)
read_data<-function(path){
data<-read.csv(file=path, sep=' ')
data<-data[, c(1, 2)]
return data
}
raw_data<-read_data(paste(path, file_name, sep='')
diff<-as.data.frame(raw_data[, 1])
path<-'/Users/csian/Desktop/CP/Photoelectron_Spectroscopy/XPS_Analysis/Generator/desperate_test/test_raw'
file_name<-'SiO2'
conta<-c(5, 10, 15, 20, 30, 40)
read_data<-function(path){
data<-read.csv(file=path, sep=' ')
data<-data[, c(1, 2)]
return(data)
}
raw_data<-read_data(paste(path, file_name, sep='')
diff<-as.data.frame(raw_data[, 1])
(3+3+3.7+0)/4
(1.7+3+3+3.7)/4
(3+3+3.7)/3
(3.035+3.23+3.05+3.48+3.78+3.7+4.19)/7
17+7+16+19+18+3+17
(2*4+3*3.7+3*4+2*4+3*3)/16
num<-c(17, 6, 16, 16, 18, 3, 17)
(2*4+3*3.7+3*4+3*4+2*4+3*3)/16
score<-c(3.035, 3.23, 3.05, 3.756, 3.783, 3.7, 4.194)
length(score)
length(num)
for(nu in num){}
for(i in seq(1, 7)){}
seq(1, 7)
for(i in seq(1, 7)){
global tot=0
tot=tot+score[i]*num[i]
}
tot
tot=0
for(i in seq(1, 7)){
global tot
tot=tot+score[i]*num[i]
}
for(i in seq(1, 7)){
tot=tot+score[i]*num[i]
}
tot
sum(num)
tot/sum(num)
tot=0
for(i in seq(1, 7)){
tot=tot+score[i]*num[i]
}
tot
tot/sum(num)
num
score
tot=num*score
tot
sum(tot)/sum(num)
3.7*36
(sum(tot)+3.7*36)/(sum(num)+36)
(sum(tot)+3.75*36)/(sum(num)+36)
(sum(tot)+3.8*36)/(sum(num)+36)
(sum(tot)+3.9*36)/(sum(num)+36)
sum(num)+36
sum(num)
130-93
548 360
library(RODBC)
install.packages('RODBC')
library(RODBC)
Sys.Date()
(23.62+181.3+11.623+65.55+68.71)/5
(23.62+181.3+11.623+65.55+68.71+5)/6
(23.62+29.44+59.12+59.96+31.45)/5
?t
?pt
qt(0.95, 9)
pt(0.975, 9)
x<-1:9
x
y<-c(5, 3, 2, 3, 4, 6, 10, 12, 18)
length(y)
df1<-data.frame(x, y)
plot(df1)
x2<-x^2
df2<-cbind(x2, df1)
df2
lm(y~x, data=df1)
summary(lm(y~x, data=df1))
plot(lm(y~x, data=df1))
plot(lm(y~x, data=df1))
plot(df1)
par(new=T)
plot(y=1.63x-1.1667)
dev.off()
plot(lm(y~x+x2, data=df2))
x1<-c(7, 1, 11, 11, 7, 11, 3, 1, 2, 21, 1, 11 ,10)
x2<-c(26, 29, 56, 31, 52, 55, 71, 31, 54, 47, 40, 66, 68)
x3<-c(6, 15, 8, 8, 6, 9, 17, 22, 18, 4, 23, 9, 8)
x4<-c(60, 52, 20, 47, 33, 22, 6, 44, 22, 26, 34, 12, 12)
Y<-c(78.5, 74.3, 104.3, 87.6, 95.9, 109.2, 102.7, 72.5,93.1, 115.9, 83.8, 113.3, 109.4)
df<-data.frame(x1, x2, x3, x4, y)
df<-data.frame(x1, x2, x3, x4, Y)
df
a<-lm(Y~x1+x2+x3+x4, data=df)
a
summary(a)
?read.csv
install.packages('Hmisc')
library(Hmisc)
library(Hmisc)
library('Hmisc')
install.packages("Hmisc")
library(Hmisc)
install.packages("Hmisc")
install.packages("Hmisc", dependencies = T)
library(Hmisc)
install.packages("Hmisc", dependencies = T)
install.packages(c("backports", "broom", "cpp11", "DBI", "digest", "dtplyr", "fansi", "fs", "glue", "knitr", "openssl", "openxlsx", "Rcpp", "readr", "stringi", "tinytex", "vroom", "withr", "xfun", "xml2"))
install.packages(c("class", "foreign", "MASS", "Matrix", "nlme", "nnet", "spatial"), lib="/opt/homebrew/Cellar/r/4.1.2/lib/R/library")
data(mtcars)
cor.test(mtcars)
cor.test(mtcars$am)
cor.test(mtcars$am, mtcars$carb)
mtcars
cor.test(mtcars$am, mtcars$carb)
install.packages('Hmsc', dependencies = T)
library(Hmisc)
SIGN.test
library(BDMS)
library(BSDA)
logit<-function(x){}
logit<-function(x){
1/(1+exp(-x))
}
plot(0:1, logit)
plot(logit, xlim=c(0, 1))
plot(logit, xlim=c(0, 10)
)
plot(logit, xlim=c(-5, 5))
logit<-function(x){
1/(1+exp(x))
}
plot(logit, xlim=c(-5, 5))
logit<-function(x){
1/(1+exp(-x))
}
plot(logit, xlim=c(-5, 5))
ldeaths
ldeaths.decompese<-decompose(ldeaths)
ldeaths
ldeaths.decompese
logit<function(x){
1/(1+exp(-x))
}
logit<-function(x){
1/(1+exp(-x))
}
plot(logit, xlim=c(-1, 1))
plot(logit, xlim=c(-5, 5))
pchisq(138.629, 99)
qchisq(138.629, 99)
?pchisq
qchisq(138.629, 99, lower.tail=for (variable in vector) {
})
qchisq(138.629, 99, lower.tail=F
)
qchisq(138.629, 99, lower.tail=F)
qchisq(138.629, df=99, lower.tail=F)
qchisq(138.629, df=99, lower.tail=T)
qchisq(138.629, df=99)
pchisq(138.629, df=99, lower.tail=F)
pchisq(64.211, df=98, lower.tail=F)
pchisq(64.211, df=98, lower.tail=F)
tanh<-function(x){
(exp(x)-exp(-x))/(exp(x)+exp(-x))
}
plot(tanh, xlim=c(-10, 10))
plot(tanh, xlim=c(-5, 5))
gauss<-function(x){
exp(-x^2/2)
}
plot(gauss, xlim=c(-5, 5))
data(iris)
library(nnet)
iris
str(iris)
nn.iris<-nnet(Species~., data=iris, size=2, range=0.1, decay=5e-4, maxit=200)
library(devtools)
install.packages('devtools')
library(devtools)
install.packages('clusterGeneration')
install.pakcages('scales')
install.packages('scales')
library(clusterGeneration)
library(scales)
library(MASS)
library(reshape)
library(reshape2)
plot(nn.iris)
nn.iris
summary(nn.iris)
plot(nn.iris)
data(infert, packages='datasets')
install.packages('datasets')
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
library(datasets)
data(infert, package="datasets")
str(infert)
library(neuralnet)
install.packages('neuralnet')
library(neuralnet)
net.infert<-nerualnet(case~age+parity+induced+spontaneous, data=infert, hidden=2, err.fct='ce', linear.output=F, likelibood=T)
net.infert<-neuralnet(case~age+parity+induced+spontaneous, data=infert, hidden=2, err.fct='ce', linear.output=F, likelibood=T)
net.infert<-neuralnet(case~age+parity+induced+spontaneous, data=infert, hidden=2, err.fct='ce', linear.output=F, likelihood=T)
plot(net.infert)
net.infert
names(net.infert)
net.infert$result.matrix
table(net.infert$result.matrix)
net.infert$data
net.infert$covariate
net.infert$response
net.infert$covariate
net.infert$result
net.infert$weights
net.infert$net.result
str(infert)
?rpart
library(rpart)
?rpart
install.packages('rpart.plot')
library(part)
library(party)
install.packages('party')
library(party)
install.packages("party")
data(stagec)
ind<-sample(2, nrow(stagec), replace=T, prob=c(0.7, 0.3))
ind
data(iris)
set.seed(1234)
k=10
sample(nrow(iris))
iris<-iris[sample(nrow(iris)), ]
folds<-cut(Seq(1, nrow(iris)), breaks=k, labels=F)
folds<-cut(seq(1, nrow(iris)), breaks=k, labels=F)
folds
folds<-cut(seq(1, nrow(iris)), breaks=k, labels=T)
folds<-cut(seq(1, nrow(iris)), breaks=k, labels=F)
for(i in 1:k){
testIdx<-which(folds==i, arr.ind=T)
}
trainData=list(0)
trainData
testData=list(0)
for(i in 1:k){
testIdx<-which(folds==i, arr.ind=T)
testData[[i]]<-iris[testIdx, ]
trainData[[i]]<-iris[testIdx, ]
}
trainData
iris
testIdx
folds
whic(folds==1, arr.ind=T)
which(folds==1, arr.ind=T)
exp(-1)
install.packages('C50')
library(C50)
library(ROCR)
174+110+38+14+11+10+7+10+3+4
174/2000
path<-'/Users/csian/Desktop/CP/Photoelectron_Spectroscopy/XPS_Analysis/Generator/desperate_test/test_raw/'
file_name<-'SiO2'
setwd('/Users/csian/Desktop/CP/Photoelectron_Spectroscopy/XPS_Analysis/Generator/desperate_test/trans_graph2')
conta<-c(10, 15, 20, 25, 30, 35, 40)
conta_pos<-c(1202.4, 943.5, 1445, 477, 496.5, 516)
read_data<-function(tmp_path){
tmp_data<-read.csv(file=tmp_path, sep=' ')
tmp_data<-tmp_data[, c(1, 2)]
return(tmp_data)
}
normalize_with<-function(df, pos){
min<-min(df[, 2])
cen<-df[which(df[, 1]==pos), 2]
dif<-cen-min
df[, 2]<-(df[, 2]-min)/dif
return(df)
}
draw_conta_line<-function(){
for(i in conta_pos){
par(new=T)
abline(v=i, col='green')
}
}
raw_data<-read_data(paste(path, 'C5O1_reg1.spc', sep=''))
C_position<-raw_data[which(raw_data[, 2]==max(raw_data[, 2])), 1]
raw_data<-normalize_with(raw_data, C_position)
for(i in conta){
tmp_path<-paste(path, file_name, '_', i, '_reg1.spc', sep='')
tmp_data<-read_data(tmp_path)
tmp_data<-normalize_with(tmp_data, C_position)
tmp_diff<-tmp_data[, 2]-raw_data[, 2]
min<-min(tmp_data[, 2])
max<-max(tmp_data[, 2])
save_file<-paste(file_name, '_', i, '.png', sep='')
title_name<-paste(file_name, ' + C5O1_', i, sep='')
png(filename=save_file, width=1400, height=600, unit='px')
par(mfrow=c(1, 2))
plot(x=raw_data[, 1], y=raw_data[, 2], col='black', type='l', ylim=c(min, max), xlab='Kinetic Energy(eV)', ylab='Intensity', title=title_name)
par(new=T)
plot(x=raw_data[, 1], y=tmp_data[, 2], col='blue', type='l', ylim=c(min, max), xaxt='n', yaxt='n', xlab='', ylab='')
draw_conta_line()
plot(x=raw_data[, 1], y=tmp_diff, col='red', type='l', xlab='Kinetic Energy(eV)', ylab='Intensity', title='Diff', ylim=c(min, max))
par(new=T)
abline(h=0, type='l', col='blue')
draw_conta_line()
dev.off()
}
