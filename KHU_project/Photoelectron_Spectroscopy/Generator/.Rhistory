A<-function(x){}
a<-8*sin(x)/x+cos(x)+1
a
}
A<-function(x){}
a<-8*sin(x)/x+cos(x)+1
A<function(x){
a<-8*sin(x)/x+cos(x)+1
a
}
A<-function(x){
a<-8*sin(x)/x+cos(x)+1
a
}
solve(A,0)
as.vector(A)
pi/6
sqrt(3)*2/16
sqrt(3)/8
sqrt(3)/8*pi
ㅗ
h
h_bar
5!
# a[A, 10^-10 m]
# vol_den("diamond", 5)
vol_den<-function(type="diamond", a){
if(type=="sc")n=1
if(type=="bcc")n=2
if(type=="fcc")n=4
if(type=="diamond")n=8
vol_den<-n/(a*10^-10)^3
vol_den
}
# vol_den[atoms/cm^3]
vol_den("daimond", 7.5)
vol_den("diamond", 7.5)
9.6/sqrt(6)
# a[A, 10^-10]
# E_infi_well(2, 5)   포텐션 간격 5A 첫 들뜬 상태 에너지
E_infi_well<-function(n, a){
a<-a*10^-10
h_bar^2*n^2*pi^2/(2*m_e*a^2)*J_eV
}
# [eV]
E_infi_well(2, 6.3)
# E, V_0[J], a[m] 단위로 넣기
# T_PB(2*eV_J, 20*eV_J, 3e-10)
# 2eV를 가진 전자가 20eV 전위벽(3e-10 두께)을 투과할 확률(<1)
T_PB<-function(E, V_0, a){
k_2<-sqrt(2*m_e/h_bar^2*(V_0-E))
16*(E/V_0)*(1-E/V_0)*exp(-2*k_2*a)
}
T_PB(1*eV_J, 16*eV_J, 2e-10)
T_PB(1*eV_J, 16*eV_J, 2e-10)*10^5
T_PB(1*eV_J, 16*eV_J, 2e-10)*10^4
# k[m^-1], E[eV]
# E는 절댓값 대입
# [cm-2]인 경우 10^2 곱해줘야 함
# eff_mass 함수는 양수만 출력
# eff_mass(5.4e9, 0.5)
eff_mass<-function(k, E){
C<-E*eV_J/k^2
eff_mass<-h_bar^2/(2*C)
eff_mass
}
# eff mass[kg]
eff_mass(7.9e9, 0.5)
eff_mass(7.9e9, 0.5)/m_e
# E_diff_EF[eV]
# fer_dir_prob(k_B*300/2*J_eV+0.25, T=300)
fer_dir_prob<-function(E_diff_EF, T=300){
E_diff_EF<-E_diff_EF*eV_J
prob<-1/(1+exp(E_diff_EF/(k_B*300)))
prob
}
# prob(<1)
fer_dir_prob(0.03, T=300)*100
# N_c_300 [cm^-3]    m^-3으로 넣어주면 출력 단위도 m^-3
# EC_diff_EF [eV]
n_0<-function(N_c_300=2.8e19, EC_diff_EF, T=300){
N_c<-N_c_300*(T/300)^(3/2)
n0<-N_c*exp(-(EC_diff_EF*eV_J)/(k_B*T))
n0
}
# 입력해준 N_c_300과 동일한 단위
n_0(2.8e19, 0.3, T=500)
# E_g [eV]
# n_i(T=500)    T=500일 때 실리콘 진성 캐리어 농도
n_i<-function(N_c_300=2.8e19, N_v_300=1.04e19, E_g=1.12, T=300){
N_c<-N_c_300*(T/300)^(3/2); N_v<-N_v_300*(T/300)^(3/2)
ni_sqr<-N_c*N_v*exp(-(E_g*eV_J)/(k_B*T))
ni<-sqrt(ni_sqr)
ni
}
n_i(1.3e19, 5.8e18, 0.5, T=300)
# T=300일 때 진성 농도비가 n0_300 이고, T=500일 때의 진성캐리어 농도를 구해야 하는 경우
# n0_500<-intrin_dense_ratio_T(300, 500, E_g=1.12)*n0_300
intrin_dense_ratio_T<-function(T1, T2, E_g=1.12){
sqrt((T2/T1)^3*exp(E_g*eV_J/k_B*(1/T1-1/T2)))
}
intrin_dense_ratio_T(300, 500, 1.6)*1e8
# m_n/m_e, m_p/m_e 비율 대입해도 무방
EF_diff_Eg<-function(m_n=1.08*m_e, m_p=0.56*m_e, T=300){
Ef_Eg<-3/4*k_B*T*J_eV*log(m_p/m_n, base=exp(1))
Ef_Eg
}
# [eV]
EF_diff_Eg(1.1, 1.3, 300)
# E, V_0[J], a[m] 단위로 넣기
# T_PB(2*eV_J, 20*eV_J, 3e-10)
# 2eV를 가진 전자가 20eV 전위벽(3e-10 두께)을 투과할 확률(<1)
T_PB<-function(E, V_0, a){
k_2<-sqrt(2*m_e/h_bar^2*(V_0-E))
16*(E/V_0)*(1-E/V_0)*exp(-2*k_2*a)
}
T_PB(1*eV_J, 16*eV_J, 2e-10)
# a[A, 10^-10 m]
# vol_den("diamond", 5)
vol_den<-function(type="diamond", a){
if(type=="sc")n=1
if(type=="bcc")n=2
if(type=="fcc")n=4
if(type=="diamond")n=8
vol_den<-n/(a*10^-10)^3
vol_den
}
# vol_den[atoms/cm^3]
vol_den('diamond', 4*sqrt(3))
7/(17*3)^(1/2)
7/sqrt(51)
sqrt(2)*1.8
h*c/(386e-9)
h*c/(386e-9)*J_eV
sqrt(9*h_bar^2*pi^2/(9*m_e))
sqrt(9*eV_J*h_bar^2*pi^2/(9*m_e))
sqrt(9*h_bar^2*pi^2/(9*m_e*eV_J))
4*pi*(2*0.8*m_e)^(3/2)/h^3*2/3*(1.1*eV_J)^(3/2)
h_bar^2/(2*0.6*m_e)
sqrt(3.4*eV_J/1.02e-38)
sqrt(3.4*eV_J/1.02e-38)/1e8
sqrt(3.4*eV_J/1.02e-38)/1e9
h_bar^2/(4.9*eV_J*2.3e-10^2)
h_bar^2/(4.9*eV_J*2.3e-10^2)/m_e
# E_diff_EF[eV]
# fer_dir_prob(k_B*300/2*J_eV+0.25, T=300)
fer_dir_prob<-function(E_diff_EF, T=300){
E_diff_EF<-E_diff_EF*eV_J
prob<-1/(1+exp(E_diff_EF/(k_B*300)))
prob
}
# prob(<1)
fer_dir_prob(0.1, T=300)
# N_c_300 [cm^-3]    m^-3으로 넣어주면 출력 단위도 m^-3
# EC_diff_EF [eV]
n_0<-function(N_c_300=2.8e19, EC_diff_EF, T=300){
N_c<-N_c_300*(T/300)^(3/2)
n0<-N_c*exp(-(EC_diff_EF*eV_J)/(k_B*T))
n0
}
# 입력해준 N_c_300과 동일한 단위
1.2e19*(298/300)^(3/2)
log(4.1e12/8.1e19, base=exp(1))*(k_B*300)
log(4.1e12/8.1e19, base=exp(1))*(-k_B*300)
log(4.1e12/8.1e19, base=exp(1))*(-k_B*300)*J_eV
log(9.2e9^2/(4.7e18*5.1e18), base=exp(1))*(-k_B*300)
log(9.2e9^2/(4.7e18*5.1e18), base=exp(1))*(-k_B*300)*J_eV
# m_n/m_e, m_p/m_e 비율 대입해도 무방
EF_diff_Eg<-function(m_n=1.08*m_e, m_p=0.56*m_e, T=300){
Ef_Eg<-3/4*k_B*T*J_eV*log(m_p/m_n, base=exp(1))
Ef_Eg
}
# [eV]
1/2*k_B*(300)*log(5e18/5e19)
1/2*k_B*(300)*log(5e18/5e19)*J_eV
8/(4*sqrt(3))^3
8/(4*sqrt(3)*10^-10)^3
7/sqrt(51)
1.8*sqrt(2)
3.86e-7*3.2
sqrt(9*h_bar^2*pi^2/(9*m_e*eV_J))
sqrt(3.4*eV_J*2*0.6*m_e/h_bar^2)
sqrt(3.4*eV_J*2*0.6*m_e/h_bar^2)/10^9
h*c/386e-9
h*c/386e-9*J_eV
4*pi*(2*0.8*m_e)^(3/2)/h^3*2/3*(1.1*eV_J)^(3/2)
h_bar^2/(4.9*eV_J*2.3e-10^2)
h_bar^2/(4.9*eV_J*2.3e-10^2)/m_e
# E_diff_EF[eV]
# fer_dir_prob(k_B*300/2*J_eV+0.25, T=300)
fer_dir_prob<-function(E_diff_EF, T=300){
E_diff_EF<-E_diff_EF*eV_J
prob<-1/(1+exp(E_diff_EF/(k_B*300)))
prob
}
# prob(<1)
fer_dir_prob(0.1)
1/(1+exp(0.1*eV_J/(k_B*300)))
1.2e19*(298/300)^(3/2)
log(4.1e12/8.1e19)*(-k_B*300)
log(4.1e12/8.1e19)*(-k_B*300)*J_eV
log(4.1e12/8.1e19)*(-k_B*300)*J_eV
log(9.2e9^2/(4.7e18*5.1e18))*(-k_B*300)
log(9.2e9^2/(4.7e18*5.1e18))*(-k_B*300)*J_eV
1/2*k_B*300*log(5e18/5e19)
1/2*k_B*300*log(5e18/5e19)*J_eV
1/2*k_B*300*log(5e18/5e19)*J_eV*10^3
log((9.2e9)^2/(4.7e18*5.1e18), base=exp(1))*(-k_B*300)
log((9.2e9)^2/(4.7e18*5.1e18), base=exp(1))*(-k_B*300)*J_eV
log(4.1e12/8.1e19)*(k_B*300)
log(4.1e12/8.1e19)*(-k_B*300)*J_eV
1/2*k_B*300*log(5e18/5e19)
1/2*k_B*300*log(5e18/5e19)*J_eV*10^3
13.6*(8.67/5)^-2
sqrt(1.2*3.4*eV_J*m_e/h_bar^2)
sqrt(1.2*3.4*eV_J*m_e/h_bar^2)/10^8
sqrt(1.2*3.4*eV_J*m_e/h_bar^2)/10^9
109-27.2
13.6*4
13.6*4/4
54.4-13.6
h*c/(27.2*eV_J)
h*c/(13.6*eV_J)
1/(3*1.097e7)
54.4-13.6
h*c/(40.8*eV_J)
h_H
r_H
c<-2.99e8   # [m/s^2]
exp(1)    # Euler's number
h<-6.62e-34   # [J s]
h_bar<-1.054e-34    # [J s] (h/(2*pi))
m_e<-9.11e-31   # [kg]
m_p<-1.6e-27    # [kg]
k_B<-1.38e-23   # [J K^-1] Boltzmann constants
mol<-6.022e23   # [mol^-1] mole
# Hydrogen
a_0<-5.29e-11   # [m] bohr radius
E_1<--13.6    # [eV] ground state Energy
R_H<-1.097e7    # [m^-1] Rydberg
epsi_0<-8.85e-12    # permittivity
mu_0<-1.26e-6   # magnetic permeability
# sqrt(epsi_0^2*mu_0^2)=c
G<-6.67e-11   # [m^3 kg^-1 s^-2]
N_A<-6.022e23   # Avogadro Num
R_gas<-8.314    # [J K^-1 mol^-1]
eV_J<-1.6e-19   # eV->J
J_eV<-1/eV_J    # J->eV
5*eV_J
5*eV_J^2/(4*pi*epsi_0*4*a_0)
5*eV_J^2/(4*pi*epsi_0*4*a_0)*J_eV
-13.6*9
122.4/4
-122.4*2-30.6
8.96/63.5*6.02e23
h_bar^2/2m_e*(3*8.49e28*pi^2)^(2/3)
h_bar^2/2*m_e*(3*8.49e28*pi^2)^(2/3)
h*c/1
h_bar^2/2*m_e*(3*8.49e28*pi^2)^(2/3)(h*c)^2
h_bar^2/2*m_e*(3*8.49e28*pi^2)^(2/3)*(h*c)^2
h_bar^2/2*m_e*(3*8.49e28*pi^2)^(2/3)/(h*c)^2
h_bar^2/2*m_e*(3*8.49e28*pi^2)^(2/3)/(h*c)^2*J_eV
h_bar^2/2*m_e*(3*8.49e28*pi^2)^(2/3)*J_eV
h_bar*eV_J
h_bar*J_eV
h_bar^2/2/m_e*(3*8.49e28*pi^2)^(2/3)*J_eV
sqrt(7.04*eV_J*2/m_e)
7.04*eV_J/k_B
2.62^2/(2*10)
?cosh
exp<-function(x){}
exp<-function(x){
cosh(x)-1.5sinh(x)/x
}
exp<-function(x){
fun<-cosh(x)-1.5sinh(x)/x
}
exp<-function(x){
fun<-cosh(x)-1.5sinh(x)/x
fun
}
exp<-function(x){
cosh(x)-1.5*sinh(x)/x
}
plot(exp, xlim=c(-2*pi, 6*pi))
plot(exp, xlim=c(-2*pi, 6*pi))
exp<-function(-x){
cosh(x)-1.5*sinh(x)/x
}
exp<-function(x){
cosh(-x)-1.5*sinh(-x)/-x
}
plot(exp, xlim=c(-2*pi, 6*pi))
cosh(0)
sinh(0)
cosh(pi)
sinh(pi)
cosh(pi)-1.5*sinh(pi)/pi
cosh(2pi)
cosh(2*pi)
sinh(2*pi)
cosh(2*pi)-1.5*sinh(2*pi)/(2*pi)
cosh(-2*pi)-1.5*sinh(-2*pi)/(-2*pi)
cosh(-2pi)
cosh(-2*pi)
plot(exp, xlim=c(-pi, 0))
abline(h=1)
exp(0)
cosh(0)
ex<-function(x){}
ex<-function(x){
1/(10*x^2+1)
}
plot(ex, xlim=c(-5,5))
ex1<-function(x){
1.0*sin(x)
}
ex2<-function(x){
0.9*sin(x-pi/3)
}
plot(ex1,xlim=c(-2*pi, 2*pi))
par(new=T)
plot(ex2)
plot(ex1,xlim=c(-2*pi, 2*pi))
plot(ex2, xlim=c(-2*pi, 2*pi), xaxt="n", yaxt="n")
plot(ex1,xlim=c(-2*pi, 2*pi))
par(new=T)
plot(ex2, xlim=c(-2*pi, 2*pi), xaxt="n", yaxt="n")
par(new=T)
plot(ex1+ex2, xlim=c(-2*pi, 2*pi), xaxt="n", yaxt="n")
ex3<-function(x){
ex1(x)+ex2(x)
}
plot(ex1+ex2, xlim=c(-2*pi, 2*pi), xaxt="n", yaxt="n")
plot(ex3, xlim=c(-2*pi, 2*pi), xaxt="n", yaxt="n")
ex1<-function(x){
1.0*sin(x)
}
ex2<-function(x){
0.5*sin(x-pi/3)
}
ex3<-function(x){
ex1(x)+ex2(x)
}
plot(ex1, xlim=(-2*pi, 2*pi), ylab="Test Plotting", title="Superposition Principle", yaxt="n")
par(new=T)
plot(ex2, xlim(-2*pi, 2*pi), ylab="", xaxt="n", yaxt="n")
par(new=T)
plot(ex3, xlim(-2*pi, 2*pi), ylab="", xaxt="n", yaxt="n", col="r"))
ex1<-function(x){
1.0*sin(x)
}
ex2<-function(x){
0.5*sin(x-pi/3)
}
ex3<-function(x){
ex1(x)+ex2(x)
}
plot(ex1, xlim=c(-2*pi, 2*pi), ylab="Test Plotting", title="Superposition Principle", yaxt="n")
par(new=T)
plot(ex2, xlim=c(-2*pi, 2*pi), ylab="", xaxt="n", yaxt="n")
par(new=T)
plot(ex3, xlim=c(-2*pi, 2*pi), ylab="", xaxt="n", yaxt="n", col="r"))
?plot
ex1<-function(x){
1.0*sin(x)
}
ex2<-function(x){
0.5*sin(x-pi/3)
}
ex3<-function(x){
ex1(x)+ex2(x)
}
plot(ex1, xlim=c(-2*pi, 2*pi), ylab="Test Plotting", main="Superposition Principle", yaxt="n")
par(new=T)
plot(ex2, xlim=c(-2*pi, 2*pi), ylab="", xaxt="n", yaxt="n")
par(new=T)
plot(ex3, xlim=c(-2*pi, 2*pi), ylab="", xaxt="n", yaxt="n", col="r"))
ex1<-function(x){
1.0*sin(x)
}
ex2<-function(x){
0.5*sin(x-pi/3)
}
ex3<-function(x){
ex1(x)+ex2(x)
}
plot(ex1, xlim=c(-2*pi, 2*pi), ylim=c(-2, 2), ylab="Test Plotting", main="Superposition Principle", yaxt="n")
par(new=T)
plot(ex2, xlim=c(-2*pi, 2*pi), ylim=c(-2, 2), ylab="", xaxt="n", yaxt="n")
par(new=T)
plot(ex3, xlim=c(-2*pi, 2*pi), ylim=c(-2, 2), ylab="", xaxt="n", yaxt="n", col="r"))
plot
plot(x)
plot(ex1)
par(new=T)
ex1<-function(x){
1.0*sin(x)
}
ex2<-function(x){
0.5*sin(x-pi/3)
}
ex3<-function(x){
ex1(x)+ex2(x)
}
plot(ex1, xlim=c(-2*pi, 2*pi), ylim=c(-2, 2), ylab="Test Plotting", main="Superposition Principle", yaxt="n")
par(new=T)
plot(ex2, xlim=c(-2*pi, 2*pi), ylim=c(-2, 2), ylab="", xaxt="n", yaxt="n")
par(new=T)
plot(ex3, xlim=c(-2*pi, 2*pi), ylim=c(-2, 2), ylab="", xaxt="n", yaxt="n", col="r"))
ex1<-function(x){
1.0*sin(x)
}
ex2<-function(x){
0.5*sin(x-pi/3)
}
ex3<-function(x){
ex1(x)+ex2(x)
}
plot(ex1, xlim=c(-2*pi, 2*pi), ylim=c(-2, 2), ylab="Test Plotting", main="Superposition Principle", yaxt="n")
par(new=T)
plot(ex2, xlim=c(-2*pi, 2*pi), ylim=c(-2, 2), ylab="", xaxt="n", yaxt="n")
par(new=T)
plot(ex3, xlim=c(-2*pi, 2*pi), ylim=c(-2, 2), ylab="", xaxt="n", yaxt="n", col="r")
ex1<-function(x){
1.0*sin(x)
}
ex2<-function(x){
0.5*sin(x-pi/3)
}
ex3<-function(x){
ex1(x)+ex2(x)
}
plot(ex1, xlim=c(-2*pi, 2*pi), ylim=c(-2, 2), ylab="Test Plotting", main="Superposition Principle", yaxt="n")
par(new=T)
plot(ex2, xlim=c(-2*pi, 2*pi), ylim=c(-2, 2), ylab="", xaxt="n", yaxt="n")
par(new=T)
plot(ex3, xlim=c(-2*pi, 2*pi), ylim=c(-2, 2), ylab="", xaxt="n", yaxt="n", col="red")
ex1<-function(x){
1.0*sin(x)
}
ex2<-function(x){
0.5*sin(x-pi/3)
}
ex3<-function(x){
ex1(x)+ex2(x)
}
plot(ex1, xlim=c(-2*pi, 2*pi), ylim=c(-2, 2), ylab="Test Plotting", main="Superposition Principle", yaxt="n")
par(new=T)
plot(ex2, xlim=c(-2*pi, 2*pi), ylim=c(-2, 2), ylab="", xaxt="n", yaxt="n")
par(new=T)
plot(ex3, xlim=c(-2*pi, 2*pi), ylim=c(-2, 2), ylab="", xaxt="n", yaxt="n", col="red")
ex1<-function(x){
1.0*sin(x)
}
ex2<-function(x){
0.5*sin(x-pi/3)
}
ex3<-function(x){
ex1(x)+ex2(x)
}
plot(ex1, xlim=c(-2*pi, 2*pi), ylim=c(-2, 2), ylab="Test Plotting", main="Superposition Principle")
par(new=T)
plot(ex2, xlim=c(-2*pi, 2*pi), ylim=c(-2, 2), ylab="", xaxt="n", yaxt="n")
par(new=T)
plot(ex3, xlim=c(-2*pi, 2*pi), ylim=c(-2, 2), ylab="", xaxt="n", yaxt="n", col="red")
ex4<-function(x){
sin(x)/x
}
plot(ex4)
plot(ex4, xlim=c(-2*pi, 2*pi))
plot(ex4, xlim=c(-8*pi, 8*pi))
2e-9*3e8
28*28+1
m_p
2(m_e+m_p)/(m_e+2*m_p)
2*(m_e+m_p)/(m_e+2*m_p)
2*(m_e+m_p)/(m_e+2*m_p)*6.563e-7
m_p+m_e/(m_e*m_p)
m_p+m_e/(m_e*m_p)/m_e
(m_p+m_e)/(m_e*m_p)/m_e
(m_p+m_e)/(m_e*m_p)
m_e*m_p/(m_e+m_p)
m_e*m_p/(m_e+m_p)/m_e
m_e/(4*pi*c*h_bar^3)*(e^2/(4*pi*epsi_0))^2
m_e/(4*pi*c*h_bar^3)*(J_eV^2/(4*pi*epsi_0))^2
j_eV
J_eV
m_e/(4*pi*c*h_bar^3)*(eV_J^2/(4*pi*epsi_0))^2
m_p*206.77*m_e/(m_p+206.77*m_e)*m_e*6.563e-7
(m_p*206.77*m_e/(m_p+206.77*m_e)*m_e)^-1*6.563e-7
(m_p*206.77*m_e/(m_p+m_e*206.77)/m_e*1.215e-7)^-1
(m_p+m_e)/(m_e*m_p)
(m_e*m_p)/(m_p+m_e)
m_eff<-(m_e*m_p)/(m_p+m_e)
m_eff
m_eff/(4*pi*c*h_bar^3)*(eV_J^2/(4*pi*epsi_0))^2
m_mu<-206.77*m_e
R<-(m_mu*m_p)/((m_mu+m_p)*m_e)
R
4/(3*R)
R<-R*(1.215e-7)
4/(3*R)
1.215e-7/R
1.215e-7*R
R
R=184
eV_J
read.csv(for_plot.csv, head=F)
setwd('/Users/csian/Desktop/CP/Photoelectron_Spectroscopy/Generator')
read.csv(for_plot.csv)
data<-read.csv(file=for_plot.csv)
