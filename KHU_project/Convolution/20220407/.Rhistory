log(gas, base=10)
diff(gas, lag=1, 3)
?diff
plot(diff(gas, lag=1, diff=2))
gas1<-log(gas, base=10)
gas2<-diff(gas, lag=1, diff=1)
plot(gas2)
gas3<-log(gas2, base=10)
gas2<-log(gas, base=10)
plot(gas2)
gas3<-diff(gas2, lag=1, differences = 1)
plot(gas3)
auto.arima(gas3)
arima(gas3, order=c(0,0,1))
ar<-arima(gas3, order=c(0,0,1))
plot(ar)
forecast(ar)
fore<-forecast(ar)
plot(fore)
library(forecast)
data("AirPassengers")
AirPassengers
plot(AirPassengers)
diff(AirPassengers, lag=1, diff=1)
data1<-diff(AirPassengers, lag=1, diff=1)
data2<-log(data1, base=10)
data1<-log(AirPassengers, base=10)
data2<-diff(data1, lag=1, diff=1)
plot(data2)
mean(data2)
length(data2)
cov(data2[10], data2[20])
y_t<-data2
t_t1<-data2[10:legnth(data2)]
t_t1<-data2[10:length(data2)]
cov(y_t, t_t1)
t_t<-data2[1:length(data2)-10]
t_t<-data2[1:(length(data2)-10)]
length(t_t)
length(t_t1)
t_t<-data2[1:(length(data2)-9)]
length(t_t1)
t_t<-data2[1:(length(data2)-9)]
length(t_t)
cov(t_t, t_t1)
data2
t1<-data2[1:length(data)]
t2<-data2[2:length(data)]
t3<-data2[3:length(data)]
t4<-data2[4:length(data)]
t0<-data2
cov(t0[:10], t2[:10])
t0[:10]
t0
t0[:10]
t1[:10]
cov(t0[1:10], t2[1:10])
t0[1:10]
t2[1:10]
t2
length(data)
data
data2
t2<-data2[2:length(data2)]
t4<-data2[4:length(data2)]
t0<-data2
a<-c(1, 2, 3, 4, 5)
a[1:3]
a[2:3]
t6<-data2[6:length(data2)]
cov(t2[1:10], t2[1:10])
cov(t4[1:10], t6[1:10])
?aov
km<-kmeans(iris[, -5], centers=3)
km$withinss
km$totss
km$betweenss
km
km$tot.withinss
?kmeans
km3<-kmeans(iris[, -5], centers=3)
km4<-kmeans(iris[, -5], centers=4)
km5<-kmenas(iris[, -5], centers=5)
km5<-kmeans(iris[, -5], centers=5)
km3$withinss
km4$withinss
km3$tot.withinss
km4$tot.withinss
km3$betweenss/km3$totss
km4$betweenss/km4$totss
km4$totss
km3$totss
a<-c(1, 2, 3)
b<-c(2, 3, 4)
a+b
a<-c(0, 0, 1)
b<-c(2*sin(pi/3)*cos(pi/2), 2*sin(pi/3)*sin(pi/2), 2*cos(pi/3))
a
b
a+b
c<-a+b
c
3.14/3
50*500
676*50
a<-c(3.4786, 2.2136, 2.2136, 2.8460)
A<-as.matrix(a)
A
A<-as.matrix(a, by=c(2, 2))
A
A<-matrix(a, by=c(2, 2))
A
?matrix
A<-matrix(a, 2, 2)
A
A%*%A
2.8460*3.4786-2.2136**2
A=matrix(c(1, 4, 2, 3), 2, 2)
a
b=a
b[1]=a[4]
b[4]=a[1]
b[2]=-b[2]
b[3]=-b[3]
b
B<-matrix(b, 2, 2)
A
B
A%*%B
(A%*%B)/5
U=(A%*%B)/5
U%*%U
A
B
A
B
V<-(B%*%A)/5
V
V1<-matrix(c(-1.20168, -0.18976, 2.34016, 1.20172), 2, 2)
V2<-matrix(c(-1.20168, 2.34016, -0.18976, 1.20172), 2, 2)
V1%*%V2
B
B%*%A
B%*%A/5
a<-c(1, 2, 3, 4)
quantile(a)
Z<-matrix(c(1, 0, 0, -1))
X<-matrix(c(0, 1, 1, 0))
Y<-matrix(c(0, -1, 1, 0))
oo<-matrix(c(0, 1, 1, 0))
ii<-matrix(c(1, 0, 1, 0))
oo
Z<-matrix(c(1, 0, 0, -1), 2)
Z
X<-matrix(c(0, 1, 1, 0), 2)
Y<-matrix(c(0, -1, 1, 0), 2)
oo<-matrix(c(0, 1, 1, 0), 2)
ii<-matrix(c(1, 0, 1, 0), 2)
Z%*%oo
oo
oo<-matrix(c(0, 1, 0, 1), 2)
Z%*%oo
Z
oo
Z%*%ii
ii<-matrix(c(0, 1, 0, 1), 2)
oo<-matrix(c(1, 0, 1, 0), 2)
oo
ii
Z%*%oo
Z%*%ii
X%*%oo
X%*%ii
X
oo
X%*%oo
Y%*%ii
Y%*%c(1, 0)
Y%*%c(0, 1)
a<-matirx(c(1, 2, 3, 4), 2)
a<-matrix(c(1, 2, 3, 4), 2)
a
tr(a)
?trace
t(a)
diag(a)
View(iris)
sqrt(17)
sqrt(15)
sqrt(16)
sqrt(5)
sqrt(2)
sqrt(2)*2
2.8460
2.8460*2
sqrt(26)
sqrt(27)
sqrt(28)
sqrt(30)
sqrt(32)
sqrt(33)
sqrt(17)
sqrt(17)/2
sqrt(5)
sqrt(6)
sqrt(7)
sqrt(8)
sqrt(8.1)
sqrt(11)
sqrt(12)
sqrt(15)
sqrt(13)
sqrt(12.1)
sqrt(12.2)
2.8460*4-2.2136*3
(2.8460*4-2.2136*3)/5
-2.2136+3.4786*2
(-2.2136+3.4786*2)/5
data(CO2)
CO2
CO2$Plant
table(CO2$Plant)
library(xlsx)
read.xlsx
read.csv()
a<-matrix(c(1, -1, 1, 1), 2)
b<-matrix(c(1, 0, 0, -1), 2)
c<-matrix(c(2, 1, 1, 2), 2)
a
b
c
a%*%b
c%*%b
c
b%*%a
c%*%b
b<-matrix(c(1, 0, 0, -3), 2)
c%*%b
b%*%a
b
a
a%*%b
c%*%a
c
a
b%*%a
b
b<-matrix(c(1, 0, 0, 3), 2)
a%*%b
c%*%a
350*350*8
980000*100
980MB
50*426
c(1, 2, 3, 4, 5)
a<-c(1, 2, 3, 4, 5)
b<-c(3, 4, 5, 6, 7)
a*b
sum(a*b)
V1<-c(1, 2, 3)
V2<-c(2, 3, 4)
M1<-matrix(c(1, 2, 3, 4, 5, 6), 2, byrow=T)
M1
M2<-matrix(c(1, 2, 3, 4, 5, 6), 3, byrow=T)
M2
M1%*%M2
M1*v1
M1*V1
M1%*%V1
5/8
1/8
-4/8
library(adjoint)
install.packages("adjoint")
?adjoint()
install.packages("RConics")
library(RConics)
?adjoint()
v<-c(1, 2, 3, 3, 2, 1, 0, 3, 4)
M1<-matrix(v, 3, byrow=T)
M1
conjagate(M1)
adjoint(M1)
adjoint(M1)
solve(M1)
a<-c(1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
length(a)
350*350
?factalnal
?factanal
data(swiss)
str(swiss)
Min<-apply(swiss, 2, min)
swiss
Min
Max<-apply(swiss, 2, max)
swiss_fa<-scale(swiss, center=Min, scale=(Max-Min))
swiss_fa
?scale
Min
swiss$Feritility==35.0
which(swiss$Feritility==35.00)
which(swiss$Feritility==35)
?which
which(swiss$Feritility, 35)
which.min(swiss$Fertility)
swiss_fa
swiss[45,]
factanal(swiss_fa, factors=3)
factanal(swiss_fa, factors=3, rotation="promax")
factanal(swiss_fa, factors=3, rotation="noe")
factanal(swiss_fa, factors=3, rotation="none")
a<-c(-0.512, -0.774, 0.751, 0.901, -0.186)
sum(a^2)
data(mtcars)
str(mtcars)
test.cars<-mtcars[, c("mgp", "hp")]
test.cars<-mtcars[, c("mgp", "hp")]
mtcars
mtcars[, "mpg"]
mtcars[, c("mpg", "hp")]
test.cars<-mtcars[, c("mpg", "hp")]
test.cars<-transform(mtcars, mpg_scale=scale(test.cars$mpg), hp_scale=scale(test.cars$hp))
test.cars
test.cars<-mtcars[, c("mpg", "hp")]
test.cars<-transform(test.cars, mpg_scale=scale(test.cars$mpg), hp_scale=scale(test.cars$hp))
test.cars
data(Titanic)
table(Titanic$Age, Titanic$Survived)
Titanic
Titanic$Age
Titanic<-as.data.frame(Titanic)
Titanic
table(Titanic$age, Titanic$Survived)
table(Titanic$Age, Titanic$Survived)
prop.table(table(Titanic$Age, Titanic$Survived))
prop.table(table(Titanic$Age, Titanic$Survived), 1)
prop.table(table(Titanic$Age, Titanic$Survived), 2)
tapply(iris$Sepal.Length, iris$Specis, mean)
tapply(iris$Sepal.Length, iris$Species, mean)
?transform
library(rply)
library(plyr)
ddply(iris, Species, mean)
ddply(iris, .Species, mean)
ddply(iris, .(Species), mean)
ddply(iris, .(Species), function(sub){
data.frame(mean_SL=mean(sub$Species.Length))
})
iris
ddply(iris, .(Species), function(sub){
data.frame(mean_SL=mean(sub$Sepal.Length))
})
ddply(iris, .(Species), function(sub){
data.frame(mean=mean(sub))
})
ddply(iris, .(Species), function(sub){
data.frame(mean=mean(sub$Sepal.Length))
})
ddply(iris, Species, function(sub){
data.frame(mean=mean(sub$Sepal.Length))
})
ddply(iris, iris$Species, function(sub){
data.frame(mean=mean(sub$Sepal.Length))
})
ddply(iris, .Species, function(sub){
data.frame(mean=mean(sub$Sepal.Length))
})
.(iris$Species)
a<-.(iris$Species)
a
a[1]
a[2]
a[3]
ddply(iris, tranform, avgSL=mean(Sepal.Length))
ddply(iris, transform, avgSL=mean(Sepal.Length))
ddply(iris, Species, transform, avgSL=mean(Sepal.Length))
ddply(iris, .(Species), transform, avgSL=mean(Sepal.Length))
library(dply)
library(dplyr)
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
library(MASS)
data(Cars93)
Cars93%>%filter((Manufacturer=='Audi')& EngineSize>=2.4)
Cars93
?select
library(reshape2)
air_melt<-melt(airquality, id.vars=c("Month", "Day"), na.rm=F)
air_melt
dcast(air_melt, Day+Month~.)
dcast(air_melt, Day+Month~...)
...
?...
a<-.(1, 2, 3)
library(data.table)
?setkey
air<-as.data.table(airquality)
먁
air
air[1:5]
air[, .(Ozone_mean=mean(Ozone, na.rm=T), Solar.R_mean=mean(Solar.R, na.rm)), by=season]
air[, .(Ozone_mean=mean(Ozone, na.rm=T), Solar.R_mean=mean(Solar.R, na.rm)), by=.(season)]
air[, season:=ifelse(Month %in% c(12, 1, 2), "winter", ifelse(Month %in% c(3:5), "spring", ifelse(Month %in% c(6:8), "summer", "fall")))]
air
air[, .(Ozone_mean=mean(Ozone, na.rm=T), Solar.R_mean=mean(Solar.R, na.rm)), by=season]
air[, .(Ozone_mean=mean(Ozone, na.rm=T), Solar.R_mean=mean(Solar.R, na.rm=T)), by=season]
air[, Ozone_mean=mean(Ozone, na.rm=T), Solar.R_mean=mean(Solar.R, na.rm=T), by=season]
air[, list(Ozone_mean=mean(Ozone, na.rm=T), Solar.R_mean=mean(Solar.R, na.rm=T)), by=season]
a<-c(1:30)
a<-a^3
sum(a)
a
7/0.05
a<-c(1, 2, 3)
library(tidyverse)
2^-7
filter_name='250nm.txt'
setwd('/Users/csian/Desktop/CP/Conovlution/20220407')
filter<-read.csv(filter_name, sep='\t')
filter[, 1]<-1240/filter[, 1]
gap=0.05
pos=7.9
end=4.15
x<-c()
y<-c()
while(pos>end){
ind=which.min(abs(filter[, 1]-pos))
x<-append(x, pos)
y<-append(y, filter[ind, 2])
pos<-pos-gap
}
x<-rev(x); y<-rev(y)
filter_r<-data.frame(x, y)
write.table(filter_r[, 2], file="filter.txt", row.names=F, col.names=F)
filter
plot(filter)
plot(filter, type='l')
plot(filter, type='l', xlabel="eV", ylabe='INT', main='250nm')
plot(filter, type='l', xlabel="eV", ylabel='INT', main='250nm')
?plot
?plot
plot(filter, type='l', xlab="eV", ylab='INT', main='250nm')
filter[, 1]
length(filter[, 1])
file_name='CPS_raw.txt'
setwd('/Users/csian/Desktop/CP/Conovlution/20220407')
df<-read.csv(file_name, sep='\t')
df<-df[, 2]
write.table(df, file="CSV_df.txt", row.names=F, col.names=F)
elgnth(df[, 1])
length(df[, 1])
df
length(df)
plot(df, type='l')
plot(df, type='l', ylab="INT", xlab="eV", main="C60")
file_name='CPS_raw.txt'
setwd('/Users/csian/Desktop/CP/Conovlution/20220407')
df<-read.csv(file_name, sep='\t', header=F)
df<-df[, 2]
write.table(df, file="CSV_df.txt", row.names=F, col.names=F)
df
legnth(df)
length(df)
filter_name='250nm.txt'
setwd('/Users/csian/Desktop/CP/Conovlution/20220407')
filter<-read.csv(filter_name, sep='\t')
filter[, 1]<-1240/filter[, 1]
gap=0.05
pos=7.9
end=4.15
x<-c()
y<-c()
while(pos>end){
ind=which.min(abs(filter[, 1]-pos))
x<-append(x, pos)
y<-append(y, filter[ind, 2])
pos<-pos-gap
}
x<-rev(x); y<-rev(y)
filter_r<-data.frame(x, y)
write.table(filter_r[, 2], file="filter.txt", row.names=F, col.names=F)
filter_r
filter_r
ma<-max(filter_r[, 2])
mi<-min(filter_r[, 2])
(filter_r[, 2]-mi)/(ma-mi)
filter_r[, 2]<-(filter_r[, 2]-mi)/(ma-mi)
filter_r[, 2]
max(filter_r[, 2])
filter_name='250nm.txt'
setwd('/Users/csian/Desktop/CP/Conovlution/20220407')
filter<-read.csv(filter_name, sep='\t')
filter[, 1]<-1240/filter[, 1]
gap=0.05
pos=7.9
end=4.15
x<-c()
y<-c()
while(pos>end){
ind=which.min(abs(filter[, 1]-pos))
x<-append(x, pos)
y<-append(y, filter[ind, 2])
pos<-pos-gap
}
x<-rev(x); y<-rev(y)
filter_r<-data.frame(x, y)
ma<-max(filter_r[, 2])
mi<-min(filter_r[, 2])
filter_r[, 2]<-(filter_r[, 2]-mi)/(ma-mi)
write.table(filter_r[, 2], file="filter.txt", row.names=F, col.names=F)
