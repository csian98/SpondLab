library(openxlsx)
?openxlsx
?readline
?readLine
?readLines
setwd("/Users/csian/Desktop/CP/Conovlution/20220407")
dir()
readLines("250nm_raw.txt")
?readLines
getwd()
setwd("./~")
setwd("~")
getwd()
?openxlsx
?createWorkbook
?writeData
?write.csv
?writeLines
?random
rnorm(100)
?rnorm
a<-rnorm(100)
a
a*a
sum(a*a)/length(a)
sum(a*a)/(length(a)-1)
a-mean(a)
mean((a-mean(a))^2)
a<-c(1, 2, 3, 4)
mean(a)
sum((a-mean(a)^2)
)
sum((a-mean(a))^2)
sum(a*a)
data(USArrests)
US.prin<-princomp(USArrests, cor=T)
US.prin$loadings
v1<-c(0.536, 0.418, 0.341, 0.649)
US.prin
dev=1.5748783
USArrests
mean(USArrests)
USArrests[1]
data<-USArrests
data[, 1]<-USArrest[, 1]-mean(USArrest[, 1])
data[, 1]<-USArrests[, 1]-mean(USArrests[, 1])
data[, 2]<-USArrests[, 2]-mean(USArrests[, 2])
data[, 3]<-USArrests[, 3]-mean(USArrests[, 3])
data[, 4]<-USArrests[, 4]-mean(USArrests[, 4])
data
data<-as.matrix(data)
data
mode(data)
class(data)
data%*%data
t(data)%*%data
d_cov<-t(data)%*%data
d_cov*vec1
d_cov*vec_1
vec_1
d_cov*v1
v1
dev
dev*d_cov
d_cov
data
length(data[, 1])
d_cov1<-d_cov/50
d_cov1
d_cov1*v1
d_cov1*dev
(d_cov1*dev)/(d_cov1*dev)
(d_cov1*dev)/(d_cov1*v1)
(d_cov1*dev^2)/(d_cov1*v1)
summary(US.prin)
dev
dev<-dev^2
d_cov1
US.prin$scale
US.prin$sdev
US.prin$n.obs
sum(data[, 1])
sum(data[, 2])
sum(data[, 3])
sum(data[, 4])
cov_d<-t(data)%*%data
cov_d
cov_d<-(t(data)%*%data)/50
cov_d
cov_d*v1
cov_d*dev
dev
cov(USArrest, USArrests)
cov(USArrests, USArrests)
cov_d<-cov(USArrest, USArrests)
cov_d<-cov(USArrests, USArrests)
US.prin$loadings
v1<-c(0.536, 0.583, 0.278, 0.543)
cov_d*v1
summary(US.prin)
cov_d*dev
cov_d
cov_d/(cov_d*v1)
cov_d
v1
cov_d%*%v1
dev*v1
cov_d
v1
US.prin$loadings
summary(US.prin)
cov_d%*%v1/v1
v1
dev
1.5748783^2
v1*dev
norm(v1)
v1/sum(v1)
v1<-v1/sum(v1)
cov_d%*%v1
v1*dev
cov_d%*%v1/v1
v1
US.prin$loadings
v1<-c(0.536, 0.583, 0.278, 0.543)
sum(v1)
v1%*%t(v1)
ddev
dev
v1%*%t(v1)*dev
cov(USArrests, USArrests)
cor(USArrests, USArrests)
v1
sum(v1^2)
v2<-c(0.418, 0.188, -0.873, -0.167)
sum(v2^2)
v_1<-v1^2
cov_d
cov_d%*%v_!
cov_d%*%v_1
v_1*dev
cov_d%*%v_1/(v_1*dev)
library(shiny)
?textInput
xor(1, 0)
?seq
seq(0, 1, length.out=1000)
tmp<-data.frame(a=1:100)
v<-c(2:101)
cbind(v, tmp)
a<-"Hello"
print(a)
print("Hello", a, "World")
cat("hello", a, "world")
numeric
)
numeric("1")
numeric("5")
as.numeric("5")
a<-1:5
b<-4:8
cor(a, b)
b[2]+1
b<-c(1, 8, 7, 5)
cor(a, b)
a
b<-c(1, 8, 7, 5, 8)
cor(a, b)
cov(a, b)
sd(a)
sd(b)
cov(a, b)/sd(a)/sd(b)
cov(a, a)
dev(a)
var(a)
cor(a)
cor(a, a)
data(USArrests)
US.prin<-princomp(USArrests, cor=T)
US.prin$loadings
a<-c(0.536, 0.583, 0.278, 0.543)
sum(a^2)
sd(a)
str(USArrests)
sd(USAccDeaths$Mu)
sd(USAccDeaths$Murder)
sd(USArrests$Murder)
sd(USArrests[, 2])
sd(USArrests[, 3])
sd(USArrests[, 4])
4.35551*a[1]+83.33766*a[2]+14.47476*a[3]+9.366385*a[4]
sum(a)
b<-c(0.536, 0.418, 0.341, 0.649)
sum(b^2)
head(USArrests)
US.prin$loadings
US.prin$scores
US.prin$loadings
head(USArrests)
a
a[1]*13.2+a[2]*236+a[3]*58+a[4]*21.2
re<-USArrests
norm(re$Murder)
re$Murder
norm(re$Murder)
?norm
c<-c(1, 2, 3, 4)
norm(c)
scale(USArrests)
head(scale(USArrests))
US.prin$loadings
a[1]*1.24256408+a[2]*0.7828393+a[3]*-0.5209066+a[4]*-0.003416473
data(swiss)
Min<-apply(swiss, 2, min)
Max<-apply(swiss, 2, max)
Min
swiss_fa<-scale(swiss, center=Min, scale(Max-Min))
swiss_fa
Min
Max-Min
?scale
swiss_fa<-scale(swiss, center=Min, scale=(Max-Min))
swiss_fa
factanal(swiss_fa, 3)
a<-c(-0.512, -0.774, 0.751, 0.901, -0.186)
sum(a^2)
2.273/(2.273+1.164+1.120)
0.512^2+0.203^2+0.832^2
1.164/(2.273+1.164+1.120)
1.12/(2.273+1.164+1.120)
2.273/1.164
0.379/0.194
data("mtcars")
test.cars<-mtcars[, c("mpg", "hp")]
test.cars<-transform(test.cars, mpg_scale=scale(test.cars$mpg), hp_scale=scale(test.cars$hp))
test.car
test.cars
?scale
sd(test.cars$hp)
sd(test.cars$hp_scale)
Min<-apply(iris, 2, min)
Max<-apply(iris, 2, max)
iris$SL_new<-scale(iris$Sepal.Length, center=Min, scale=Max-Min))
iris$SL_new<-scale(iris$Sepal.Length, center=Min, scale=Max-Min)
Max
Max<-max(iris$Sepal.Length)
Min<-min(iris$Sepal.Length)
iris$SL_new<-scale(iris$Sepal.Length, center=Min, scale=Max-Min)
iris
sd(iris$SL_new)
sd(iris$Sepal.Length)
iris1<-iris
iris2<-iris
colnames(iris2)
colnmaes(iris2)<-c("Sepal.Length" "Sepal.Width"  "Petal.Length" "Petal.Width"  "Species"      "SL_new2")
colnmaes(iris2)<-c("Sepal.Length" ,"Sepal.Width",  "Petal.Length", "Petal.Width"  ,"Species"    ,  "SL_new2")
colnames(iris2)<-c("Sepal.Length" ,"Sepal.Width",  "Petal.Length", "Petal.Width"  ,"Species"    ,  "SL_new2")
merge(iris1, iris2, by.x="SL_new", by.y="SL_new2")
test<-c(1:100)
fivenum(test)
test<-list(test)
test
test2<-vapply(test, fivenum, FUN.VALUE=c("MIN"=0, "Q1"=0, "Q2"=0, "Q3"=0, "MAX"=0))
test2
test2<-vapply(test, fivenum, FUN.VALUE=c("MIN"=1, "Q1"=0, "Q2"=0, "Q3"=0, "MAX"=0))
test2
test2<-vapply(test, fivenum, FUN.VALUE=c("MIN"=1, "Q1"=1, "Q2"=0, "Q3"=0, "MAX"=0))
test2
test2<-vapply(test, fivenum, FUN.VALUE=c("MIN", "Q1", "Q2"=0, "Q3"=0, "MAX"=0))
?vapply
tapply(iris, Species, max)
tapply(iris, "Species", max)
tapply(iris$Sepal.Length, iris$Species, max)
aggregate(iris$Sepal.Length, iris$Species, max)
?aggregate
aggregate(x=iris$Sepal.Length, by=iris$Species, FUN=max)
aggregate(iris$Sepal.Length~iris$Species, max)
aggregate(iris$Sepal.Length~iris$Species, iris, max)
aggregate(Sepal.Length~Species, iris, max)
aggregate(Sepal.Length~Species=='setosa', iris, max)
?subset
library(dplyr)
iris%>%group_by(Species)
iris%>%group_by(Species)%>%summarize(sum=sum(Sepal.Length))
iris%>%group_by(Species)%>%mutate(sum=sum(Sepal.Length))
a<-iris%>%group_by(Species)%>%mutate(sum=sum(Sepal.Length))
a
class(a)
mode(a)
a<-as.data.frame(a)
a
data(iris)
?sort
sort(iris)
?order
order(c(100:1))
order(c(3, 2, 6, 1, 2))
iris%>%arrage(Sepal.Length)
iris%>%arrange(Sepal.Length)
?desc
?bind_rows
library(data.table)
iris_dt<-as.data.table(iris)
iris_dt[, , "Species"]
iris_dt[1:10,]
iris_dt[1:,]
iris_dt[1:length(iris_dt),]
iris_dt[1:length(iris_dt[, 1]),]
iris_dt
iris_dt[, 1]
length(iris_dt[, 1])
iris_dt$Sepal.Length
str(iris_dt)
length(iris_dt[, 1])
iris_dt[, 1]
.(hi=c(1, 2, 3))
?merge
?merge
data("airquality")
airquality$Ozone<-ifelse(is.na(airquality$Ozone), mean(airquality$Ozone, na.rm=T), airquality$Ozone)
is.complete(airquality$Ozone)
complete.cases(airquality$Ozone)
library(DMwR2)
centralValue(airquality)
airquality
data(airquality)
airquality
?DMwR2
central.Imputation
centralImputation
?centralImputation
?Amelia
library(Amelia)
library(Amelia)
install.packages("Amelia")
library(Amelia)
?amelia
data("airquality')
''
)
data("airquality")
missmap(airquality)
boxplot(Sepal.Length~Species, iris)
boxplot(Sepal.Length~Species, iris, horizontal=T)
boxplot(Sepal.Length~Species, iris, horizontal=F)
boxplot(Sepal.Length~Species, iris, horizontal=T)
clear
boxplot(Sepal.Length, iris)
boxplot(iris$Sepal.Length, iris)
boxplot(airquality$Ozone)
boxplot(iris$Sepal.Length)
boxplot(iris$Sepal.Length)
boxplot(iris$Sepal.Length, horizontal=T)
boxplot(iris$Sepal.Length, horizontal=T)
63.5-18
63.5+45.5*1.5
?IQR
?POSIXlt
Sys.time()
time<-as.POSIXlt(Sys.time())
time
time2<-as.POSIXct(Sys.time())
time2
class(time2)
class(time)
time$year
time$year+1900
class(Sys.Date())
sample(1:100, 10, prob=c(1, 2))
?sample
sample(1:10, 3, replace=T, prob=c(1:10))
sample(1:10, 3, replace=T, prob=c(1:10))
sample(1:10, 3, replace=T, prob=c(1:10))
sample(1:10, 3, replace=T, prob=c(1:10))
sample(1:10, 3, replace=T, prob=c(1:10))
sample(1:10, 3, replace=T, prob=c(1:9))
sample(c(1, 2), 10, prob=c(9, 1))
sample(c(1, 2), 10, prob=c(9, 1), replace=T)
sample(c(1, 2), 10, prob=c(9, 1), replace=T)
sample(c(1, 2), 10, prob=c(9, 1), replace=T)
sample(c(1, 2), 10, prob=c(9, 1), replace=T)
sample(c(1, 2), 10, prob=c(9, 1), replace=T)
sample(c(1, 2), 10, prob=c(9, 1), replace=T)
sample(c(1, 2), 10, prob=c(9, 1), replace=T)
sample(c(1, 2), 10, prob=c(9, 1), replace=T)
sample(c(1, 2), 10, prob=c(9, 1), replace=T)
sample(c(1, 2), 10, prob=c(9, 1), replace=T)
sample(c(1, 2), 10, prob=c(9, 1), replace=T)
install.packages("sampling")
library(sampling)
strata(iris, "Species", size=c(10, 10, 10), method="srswor")
stra<-strata(iris, "Species", size=c(10, 10, 10), method="srswor")
getdata(iris, stra)
stra
ks.test
?ks.test
?qq.test
?qqnorm()
qqnorm(iris$Sepal.Length)
qqnorm(iris$Sepal.Length)
qqline()
qqline(iris$Sepal.Length)
qnorm(1, 0, 1)
qnorm(0.5, 0, 1)
qnorm(0.75, 0, 1)
qnorm(0.25, 0, 1)
pnorm(0.5)
pnorm(-0.5)
?pnorm
pnorm(1)
pnorm(-1)
qnorm(0.1586)
before<-c(7, 3, 4, 5, 2, 1, 6, 6, 5, 4)
after<-c(8, 4, 5, 6, 2, 3, 6, 8, 6, 5)
t.test(before, after, paired=T, m=0, alternative="less")
after-before
mean(after-before)
sd(after-before)
mean(after)
mean(before)
mean(before)
mean(after)
diff<-after-before
diff-(mean(before)-mean(after))
diff<-before-after
diff-(mean(before)-mean(after))
diff-(mean(before)-mean(after))
diff<-mean(diff)
diff-(mean(before)-mean(after))
0/(sd(before-after)/sqrt(9))
dt(-4.7434, 9)
pd(0.0005269)
pt(0.0005269, 9)
diff
t.test(before, after, "less", paired=T)
D<-before-after
-4.7434*sd(D)/sqrt(9)
10/9
9/10
mean(before)
sum(before)/10
sum(after)
dt(-4.7434, 9)
dt(-4.7434, 9)/2
dt(-4.7434, 9)*2
dt(-4.7435, 9)
dt(-4.7433, 9)
?dt
pt(-4.7433, 9)
?pf
pf(0.3435, 46, 96)
pf(0.3435, 46, 96)*2
pt(-8.7095, 136.84)
pt(-8.7095, 136.84)*2
data(survey, packages="MASS")
library(MASS)
data(survey, packages="MASS")
data(survey, package="MASS")
survey$WrHand
236*0.1
236*0.2
236*0.8
(18-47.2)^2/18+(218-188.8)^2/218
236*0.2
236*0.8
218+18
(18-47.2)^2/47.2+(218-188.8)^2/188.8
pchisq(22.581, 1)
pchisq(22.581, 1, tail=F)
pchisq(22.581, 1)
?pchisq
pchisq(22.581, 1, lower.tail=F)
?interaction.plot
?Random
runs.test
library(shiny)
?shinyjs
install.packages("shinyjs")
setwd("/Users/csian/Desktop/CP/Conovlution/data")
before<-read.table("data.txt")
setwd("/Users/csian/Desktop/CP/Conovlution/Source")
after<-read.table("after.txt")
after<-cbind(before[, 1], after)
colnames(before)<-c("Kinetic Enery[eV]", "CPS")
colnames(after)<-c("Kinetic Enery[eV]", "CPS")
opar<-par(mfrow=c(1, 2))
plot(before, type='l', main="BEFORE")
plot(after, type='l', main="AFTER")
par(opar)
after
abs(after$CPS)
plot(abs(after$CPS))
plot(abs(after$CPS), type='l')
plot(after)
plot(after, type='l')
length(after$CPS)
a1<-c()
a2<-c()
seq(1, length(after$CPS), 2)
a1<-after$CPS[seq(1, length(after$CPS), 2), ]
a1<-after[seq(1, length(after$CPS), 2), ]
a2<-after[seq(2, length(after$CPS), 2), ]
a1
a2
a3<-a1$CPS+a2$CPS
a1<-a1[-1, ]
a3<-a1$CPS+a2$CPS
a3
plot(a3)
plot(a3, type='l')
plot(after)
plot(after, type='l')
