train<-train[, use_col]
test<-test[, use_col]
library(adabag)
bag<-bagging(survived~., data=train)
set.seed(12345)
nr<-nrow(data)
train_ind<-sample(1:nr, nr*0.7, replace=T)
train<-data[train_ind, ]
test<-data[-train_ind, ]
use_col<-c("pclass", "sex", "sibsp", "parch", "fare", "embarked", "survived")
train<-train[, use_col]
test<-test[, use_col]
library(adabag)
library(randomForest)
bag<-bagging(survived~., data=train, mfinal=30)
boost<-boosting(survived~., data=train, boos=T, mfinal=30)
rf<-randomForest(survived~., data=train, ntree=20, mtry=sqrt(6))
bag_pred<-predict(bag, test)
bag_pred
set.seed(12345)
nr<-nrow(data)
train_ind<-sample(1:nr, nr*0.7, replace=T)
train<-data[train_ind, ]
test<-data[-train_ind, ]
use_col<-c("pclass", "sex", "sibsp", "parch", "fare", "embarked", "survived")
train<-train[, use_col]
test<-test[, use_col]
library(adabag)
library(randomForest)
bag<-bagging(survived~., data=train, mfinal=30)
boost<-boosting(survived~., data=train, boos=T, mfinal=30)
rf<-randomForest(survived~., data=train, ntree=20, mtry=sqrt(6))
bag_pred<-predict(bag, test)
boost_pred<-predict(boost, test)
rf_pred<-predict(rf, test)
rf_pred
bag_pred
str(c(bag_pred, boost_pred))
str(c(bag_pred, boost_pred, rf_pred))
class(c(bag_pred, boost_pred, rf_pred))
class(bag_pred)
class(rf_pred)
rf_pred
as.data.frame(bag_pred)
data.frame(bag_pred)
bag_pred$votes
bag_pred$class
rf_pred
as.numeric(rf_pred)
bag_pred
set.seed(12345)
nr<-nrow(data)
train_ind<-sample(1:nr, nr*0.7, replace=T)
train<-data[train_ind, ]
test<-data[-train_ind, ]
use_col<-c("pclass", "sex", "sibsp", "parch", "fare", "embarked", "survived")
train<-train[, use_col]
test<-test[, use_col]
library(adabag)
library(randomForest)
bag<-bagging(survived~., data=train, mfinal=30)
boost<-boosting(survived~., data=train, boos=T, mfinal=30)
rf<-randomForest(survived~., data=train, ntree=20, mtry=sqrt(6))
bag_pred<-predict(bag, test)
boost_pred<-predict(boost, test)
rf_pred<-predict(rf, test)
bag_pred<-bag_pred$class
boost_pred<-boost_pred$class
rf_pred<-as.numeric(rf_pred)
write.csv(bag_pred, "bag_pred.csv")
write.csv(boost_pred, "boost_pred.csv")
write.csv(rf_pred, "rf_pred.csv")
summary(rf)
rf
?confusionMatrix
library(carte)
library(caret)
library(caret)
library(ROCR)
confusionMatrix(data=rf_pred, test[, "survived"])
?confusionMatrix
survived
test[, "survived"]
rf_pred
set.seed(12345)
nr<-nrow(data)
train_ind<-sample(1:nr, nr*0.7, replace=T)
train<-data[train_ind, ]
test<-data[-train_ind, ]
use_col<-c("pclass", "sex", "sibsp", "parch", "fare", "embarked", "survived")
train<-train[, use_col]
test<-test[, use_col]
library(adabag)
library(randomForest)
bag<-bagging(survived~., data=train, mfinal=30)
boost<-boosting(survived~., data=train, boos=T, mfinal=30)
rf<-randomForest(survived~., data=train, ntree=20, mtry=sqrt(6))
bag_pred<-predict(bag, test)
boost_pred<-predict(boost, test)
rf_pred<-predict(rf, test)
bag_pred<-bag_pred$class
boost_pred<-boost_pred$class
rf_pred<-as.factor(rf_pred)
#write.csv(bag_pred, "bag_pred.csv")
#write.csv(boost_pred, "boost_pred.csv")
#write.csv(rf_pred, "rf_pred.csv")
library(caret)
library(ROCR)
confusionMatrix(data=rf_pred, test[, "survived"])
pred<-prediction(rf_pred, test$survived)
rf_pred
test$survived
pred<-prediction(as.numeric(rf_pred), as.numeric(test$survived))
pred
library(caret)
library(ROCR)
confusionMatrix(data=rf_pred, test[, "survived"], positive="survived")
pred<-prediction(as.numeric(rf_pred), as.numeric(test$survived))
perf<-performance(pred, "tpr", "fpr")
plot(perf)
par()
file_path<-"/Users/csian/Desktop/CSIAN/ADP/ADP-test/모의고사 2회/Titanic.csv"
data<-read.csv(file_path)
sum(is.na(data))
data$cabin[data$cabin==""]=NA
data$embarked[data$embarked==""]=NA
data$survived<-factor(data$survived)
data$sex<-factor(data$sex)
data$embarked<-factor(data$embarked)
install.packages("DMwR")
data<-centralImputation(data)
sum(is.na(data))
data<-within(data, {
age_1=integer(0)
age_1[age>=0 & age<10]=0
age_1[age>=10 & age<20]=1
age_1[age>=20 & age<30]=2
age_1[age>=30 & age<40]=3
age_1[age>=40 & age<50]=4
age_1[age>=50 & age<60]=5
age_1[age>=60 & age<70]=6
age_1[age>=70 & age<80]=7
age_1[age>=80 & age<90]=8
})
set.seed(12345)
nr<-nrow(data)
train_ind<-sample(1:nr, nr*0.7, replace=T)
train<-data[train_ind, ]
test<-data[-train_ind, ]
use_col<-c("pclass", "sex", "sibsp", "parch", "fare", "embarked", "survived")
train<-train[, use_col]
test<-test[, use_col]
library(adabag)
library(randomForest)
bag<-bagging(survived~., data=train, mfinal=30)
boost<-boosting(survived~., data=train, boos=T, mfinal=30)
rf<-randomForest(survived~., data=train, ntree=20, mtry=sqrt(6))
bag_pred<-predict(bag, test)
boost_pred<-predict(boost, test)
rf_pred<-predict(rf, test)
bag_pred<-bag_pred$class
boost_pred<-boost_pred$class
rf_pred<-as.factor(rf_pred)
#write.csv(bag_pred, "bag_pred.csv")
#write.csv(boost_pred, "boost_pred.csv")
#write.csv(rf_pred, "rf_pred.csv")
library(caret)
library(ROCR)
confusionMatrix(data=rf_pred, test[, "survived"], positive="survived")
pred<-prediction(as.numeric(rf_pred), as.numeric(test$survived))
perf<-performance(pred, "tpr", "fpr")
plot(perf)
file_path<-"/Users/csian/Desktop/CSIAN/ADP/ADP-test/모의고사 2회/Titanic.csv"
data<-read.csv(file_path)
sum(is.na(data))
data$cabin[data$cabin==""]=NA
data$embarked[data$embarked==""]=NA
data$survived<-factor(data$survived)
data$sex<-factor(data$sex)
data$embarked<-factor(data$embarked)
install.packages("DMwR2")
data<-centralImputation(data)
sum(is.na(data))
data<-within(data, {
age_1=integer(0)
age_1[age>=0 & age<10]=0
age_1[age>=10 & age<20]=1
age_1[age>=20 & age<30]=2
age_1[age>=30 & age<40]=3
age_1[age>=40 & age<50]=4
age_1[age>=50 & age<60]=5
age_1[age>=60 & age<70]=6
age_1[age>=70 & age<80]=7
age_1[age>=80 & age<90]=8
})
file_path<-"/Users/csian/Desktop/CSIAN/ADP/ADP-test/모의고사 2회/Titanic.csv"
data<-read.csv(file_path)
sum(is.na(data))
data$cabin[data$cabin==""]=NA
data$embarked[data$embarked==""]=NA
data$survived<-factor(data$survived)
data$sex<-factor(data$sex)
data$embarked<-factor(data$embarked)
library("DMwR2")
data<-centralImputation(data)
sum(is.na(data))
data<-within(data, {
age_1=integer(0)
age_1[age>=0 & age<10]=0
age_1[age>=10 & age<20]=1
age_1[age>=20 & age<30]=2
age_1[age>=30 & age<40]=3
age_1[age>=40 & age<50]=4
age_1[age>=50 & age<60]=5
age_1[age>=60 & age<70]=6
age_1[age>=70 & age<80]=7
age_1[age>=80 & age<90]=8
})
set.seed(12345)
nr<-nrow(data)
train_ind<-sample(1:nr, nr*0.7, replace=T)
train<-data[train_ind, ]
test<-data[-train_ind, ]
use_col<-c("pclass", "sex", "sibsp", "parch", "fare", "embarked", "survived")
train<-train[, use_col]
test<-test[, use_col]
library(adabag)
library(randomForest)
bag<-bagging(survived~., data=train, mfinal=30)
boost<-boosting(survived~., data=train, boos=T, mfinal=30)
rf<-randomForest(survived~., data=train, ntree=20, mtry=sqrt(6))
bag_pred<-predict(bag, test)
boost_pred<-predict(boost, test)
rf_pred<-predict(rf, test)
bag_pred<-bag_pred$class
boost_pred<-boost_pred$class
rf_pred<-as.factor(rf_pred)
#write.csv(bag_pred, "bag_pred.csv")
#write.csv(boost_pred, "boost_pred.csv")
#write.csv(rf_pred, "rf_pred.csv")
library(caret)
library(ROCR)
confusionMatrix(data=rf_pred, test[, "survived"], positive="survived")
pred<-prediction(as.numeric(rf_pred), as.numeric(test$survived))
perf<-performance(pred, "tpr", "fpr")
plot(perf)
nrow(rf_pred)
rf_pred
length(rf_pred)
length(test$survived)
confusionMatrix(data=rf_pred, test[, "survived"], positive="survived")
library(caret)
library(ROCR)
confusionMatrix(data=rf_pred, reference=test[, "survived"], positive="survived")
pred<-prediction(as.numeric(rf_pred), as.numeric(test$survived))
perf<-performance(pred, "tpr", "fpr")
plot(perf)
test[, "survived"]
library(caret)
library(ROCR)
confusionMatrix(data=rf_pred, reference=test[, "survived"])
pred<-prediction(as.numeric(rf_pred), as.numeric(test$survived))
perf<-performance(pred, "tpr", "fpr")
plot(perf)
file_path
file_path<-"/Users/csian/Desktop/CSIAN/ADP/ADP-test/모의고사 2회/연설문.csv"
library(tm)
library("KoNLP")
file_path<-"/Users/csian/Desktop/CSIAN/ADP/ADP-test/모의고사 2회/연설문.csv"
library(tm)
library("KoNLP")
file_path<-"/Users/csian/Desktop/CSIAN/ADP/ADP-test/모의고사 2회/연설문.csv"
speach<-readLines(file_path)
library(tm)
library("KoNLP")
file_path<-"/Users/csian/Desktop/CSIAN/ADP/ADP-test/모의고사 2회/연설문.txt"
speach<-readLines(file_path)
speach
L<-
)
L=5.2918e-11  # [m]
sqrt(2/L)*pi.L
sqrt(2/L)*pi/L
psi<-function(x){
sqrt(2/L)*sin(pi*x/L)
}
psi(0)
psi(L)
# Schrodiger Equation
import numpy as np
import matplotlib.pyplot as plt
# Potential ftn
def V(x):
# Infinite Potential Well
return 0.0
def f(r, x, E):
psi=r[0]
phi=r[1]
fpsi=phi
fphi=(2*m/h_bar**2)*(V(x)-E)*psi
return np.array([fpsi, fphi], float)
def RK4(r, x, E):
global h
k1=h*f(r, x, E)
k2=h*f(r+0.5*k1, x+0.5*h, E)
k3=h*f(r+0.5*k2, x+0.5*h, E)
k4=h*f(r+k3, x+h, E)
r+=(k1+2*k2+2*k3+k4)/6
return r
def solve(E): # find psi=0
global L
psi=0.; phi=1.
r=np.array([psi, phi], float)
for x in np.arange(0, L, h):
r=RK4(r, x, E)
return r[0]
if __name__=="__main__":
m=9.1094e-31
h_bar=1.0546e-34
e=1.6022e-19
L=5.2918e-11  # Bohr radius
N=1000
x=np.linspace(0, L, N)
h=x[1]-x[0]
E1=0.; E2=e
psi2=solve(E1)
tolerance=e/1000
while abs(E2-E1)>tolerance:
psi1, psi2=psi2, solve(E2)
E1, E2=E2, E2-psi2*(E2-E1)/(psi2-psi1)
print("E=", E2/e, "eV")
pphi=np.zeros_like(x)
ppsi=np.zeros_like(x)
pphi[0]=1.; ppsi[0]=0.
for i in range(len(x)-1):
r=np.array([ppsi[i], pphi[i]], float)
r=RK4(r, x[i], E2)
ppsi[i+1]=r[0]
pphi[i+1]=r[1]
# Normalize psi
integ=0.
for i in range(len(x)):
integ+=h*ppsi[i]**2
norm_ppsi=ppsi/np.sqrt(integ)
plt.plot(x, norm_ppsi)
plt.xlim(0, L)
plt.show()
psi(5.297097097097097e-14)
psi<-function(x){
+     sqrt(2/L)*sin(pi*x/L)
+ }
psi<-function(x){
+     sqrt(2/L)*sin(pi*x/L)
+ }
psi<-function(x){
+     sqrt(2/L)*sin(pi*x/L)}
psi<-function(x){
+     sqrt(2/L)*sin(pi*x/L)}
psi(5.297097097097097e-14)
134*4
a = 2.461
c = 6.708
a
c
c/a
sqrt(3)/3
3/sqrt(3)
3/sqrt(3)*a
sqrt(3)/2
setwd("/Users/csian/Desktop/CP/KHU_project/Convolution/Source/cs/REELS")
data<-read.table("C60.txt", header=TRUE)
data<-data[, c(3, 4)]
colnames(data)<-c("Energy Loss", "Intensity(CPS)")
oldpar=par(mfrow=c(1, 2))
plot(data, type='l', xlim=rev(range(data[, 1])), main="C60 10 nm/ITO REELS reference spectrum")
a<-which(data[, 1]==0.5); b<-which(data[, 1]==3.5)
plot(data[a:b, ], type='l', xlim=rev(range(data[a:b, 1])), ylab="")
par(oldpar)
# size 90 filter
ind<-which(data[, 2]>1000)
filter<-rev(data[ind, 2])
filter<-scale(filter, center=min(filter), scale=max(filter)-min(filter))
filter<-as.vector(filter)
write.table(filter, "filter.txt", row.names=F, col.names=F)
write.table(data[, ], "data.txt", row.name=F, col.names=F)
setwd("/Users/csian/Desktop/CP/KHU_project/Convolution/Source/cs/REELS")
data<-read.table("C60.txt", header=TRUE)
data<-data[, c(3, 4)]
dir_path<-"/Users/csian/Desktop/CP/KHU_project/Convolution/Source/cs/REELS/k/"
k<-"20"
k_name<-paste(dir_path, "k_", k, ".txt", sep="")
tmp_data<-read.csv(k_name)
diff=nrow(tmp_data)-nrow(data)
tmp_data<-tmp_data[(diff/2+1):(nrow(tmp_data)-diff/2), 1]
data[, 3]<-tmp_data
colnames(data)<-c("eV", "before", "after")
data[, 2]<-scale(data[, 2], center=min(data[, 2]), scale=max(data[, 2])-min(data[, 2]))
data[, 3]<-scale(data[, 3], center=min(data[, 3]), scale=max(data[, 3])-min(data[, 3]))
plot(data[, 1], data[, 2], type='l', xlab="eV", ylab="CPS")
lines(data[, 1], data[, 3])
plot(data[a:b, 1], data[a:b, 3], type='l', xlim=rev(range(data[a:b, 1])), ylab="", xlab="eV")
setwd("/Users/csian/Desktop/CP/KHU_project/Convolution/Source/cs/REELS")
data<-read.table("C60.txt", header=TRUE)
data<-data[, c(3, 4)]
dir_path<-"/Users/csian/Desktop/CP/KHU_project/Convolution/Source/cs/REELS/k/"
k<-"20"
k_name<-paste(dir_path, "k_", k, ".txt", sep="")
tmp_data<-read.csv(k_name)
diff=nrow(tmp_data)-nrow(data)
tmp_data<-tmp_data[(diff/2+1):(nrow(tmp_data)-diff/2), 1]
data[, 3]<-tmp_data
colnames(data)<-c("eV", "before", "after")
data[, 2]<-scale(data[, 2], center=min(data[, 2]), scale=max(data[, 2])-min(data[, 2]))
data[, 3]<-scale(data[, 3], center=min(data[, 3]), scale=max(data[, 3])-min(data[, 3]))
plot(data[, 1], data[, 2], type='l', xlab="eV", ylab="CPS")
lines(data[, 1], data[, 3])
plot(data[, 1], data[a:b, 3], type='l', xlim=rev(range(data[a:b, 1])), ylab="", xlab="eV")
setwd("/Users/csian/Desktop/CP/KHU_project/Convolution/Source/cs/REELS")
data<-read.table("C60.txt", header=TRUE)
data<-data[, c(3, 4)]
dir_path<-"/Users/csian/Desktop/CP/KHU_project/Convolution/Source/cs/REELS/k/"
k<-"20"
k_name<-paste(dir_path, "k_", k, ".txt", sep="")
tmp_data<-read.csv(k_name)
diff=nrow(tmp_data)-nrow(data)
tmp_data<-tmp_data[(diff/2+1):(nrow(tmp_data)-diff/2), 1]
data[, 3]<-tmp_data
colnames(data)<-c("eV", "before", "after")
data[, 2]<-scale(data[, 2], center=min(data[, 2]), scale=max(data[, 2])-min(data[, 2]))
data[, 3]<-scale(data[, 3], center=min(data[, 3]), scale=max(data[, 3])-min(data[, 3]))
plot(data[, 1], data[, 2], type='l', xlab="eV", ylab="CPS")
lines(data[, 1], data[, 3])
plot(data[, 1], data[, 3], type='l', xlim=rev(range(data[a:b, 1])), ylab="", xlab="eV")
setwd("/Users/csian/Desktop/CP/KHU_project/Convolution/Source/cs/REELS")
data<-read.table("C60.txt", header=TRUE)
data<-data[, c(3, 4)]
dir_path<-"/Users/csian/Desktop/CP/KHU_project/Convolution/Source/cs/REELS/k/"
k<-"20"
k_name<-paste(dir_path, "k_", k, ".txt", sep="")
tmp_data<-read.csv(k_name)
diff=nrow(tmp_data)-nrow(data)
tmp_data<-tmp_data[(diff/2+1):(nrow(tmp_data)-diff/2), 1]
data[, 3]<-tmp_data
colnames(data)<-c("eV", "before", "after")
data[, 2]<-scale(data[, 2], center=min(data[, 2]), scale=max(data[, 2])-min(data[, 2]))
data[, 3]<-scale(data[, 3], center=min(data[, 3]), scale=max(data[, 3])-min(data[, 3]))
plot(data[, 1], data[, 2], type='l', xlab="eV", ylab="CPS")
lines(data[, 1], data[, 3])
setwd("/Users/csian/Desktop/CP/KHU_project/Convolution/Source/cs/REELS")
data<-read.table("C60.txt", header=TRUE)
data<-data[, c(3, 4)]
dir_path<-"/Users/csian/Desktop/CP/KHU_project/Convolution/Source/cs/REELS/k/"
k<-"20"
k_name<-paste(dir_path, "k_", k, ".txt", sep="")
tmp_data<-read.csv(k_name)
diff=nrow(tmp_data)-nrow(data)
tmp_data<-tmp_data[(diff/2):(nrow(tmp_data)-diff/2-1), 1]
data[, 3]<-tmp_data
colnames(data)<-c("eV", "before", "after")
data[, 2]<-scale(data[, 2], center=min(data[, 2]), scale=max(data[, 2])-min(data[, 2]))
data[, 3]<-scale(data[, 3], center=min(data[, 3]), scale=max(data[, 3])-min(data[, 3]))
plot(data[, 1], data[, 2], type='l', xlab="eV", ylab="CPS")
lines(data[, 1], data[, 3])
plot(data[a:b, 1], data[a:b, 3], type='l', xlim=rev(range(data[a:b, 1])), ylab="", xlab="eV")
setwd("/Users/csian/Desktop/CP/KHU_project/Convolution/Source/cs/REELS")
data<-read.table("C60.txt", header=TRUE)
data<-data[, c(3, 4)]
dir_path<-"/Users/csian/Desktop/CP/KHU_project/Convolution/Source/cs/REELS/k/"
k<-"20"
k_name<-paste(dir_path, "k_", k, ".txt", sep="")
tmp_data<-read.csv(k_name)
diff=nrow(tmp_data)-nrow(data)
tmp_data<-tmp_data[(diff/2):(nrow(tmp_data)-diff/2-1), 1]
data[, 3]<-tmp_data
colnames(data)<-c("eV", "before", "after")
data[, 2]<-scale(data[, 2], center=min(data[, 2]), scale=max(data[, 2])-min(data[, 2]))
data[, 3]<-scale(data[, 3], center=min(data[, 3]), scale=max(data[, 3])-min(data[, 3]))
plot(data[, 1], data[, 2], type='l', xlab="eV", ylab="CPS")
lines(data[, 1], data[, 3])
setwd("/Users/csian/Desktop/CP/KHU_project/Convolution/Source/cs/REELS")
data<-read.table("C60.txt", header=TRUE)
data<-data[, c(3, 4)]
dir_path<-"/Users/csian/Desktop/CP/KHU_project/Convolution/Source/cs/REELS/k/"
k<-"20"
k_name<-paste(dir_path, "k_", k, ".txt", sep="")
tmp_data<-read.csv(k_name)
diff=nrow(tmp_data)-nrow(data)
tmp_data<-tmp_data[(diff/2):(nrow(tmp_data)-diff/2-1), 1]
data[, 3]<-tmp_data
colnames(data)<-c("eV", "before", "after")
data[, 2]<-scale(data[, 2], center=min(data[, 2]), scale=max(data[, 2])-min(data[, 2]))
data[, 3]<-scale(data[, 3], center=min(data[, 3]), scale=max(data[, 3])-min(data[, 3]))
plot(data[, 1], data[, 2], type='l', xlab="eV", ylab="CPS")
lines(data[, 1], data[, 3], col="blue")
plot(data[a:b, 1], data[a:b, 3], type='l', xlim=rev(range(data[a:b, 1])), ylab="", xlab="eV")
setwd("/Users/csian/Desktop/CP/KHU_project/Convolution/Source/cs/REELS")
data<-read.table("C60.txt", header=TRUE)
data<-data[, c(3, 4)]
dir_path<-"/Users/csian/Desktop/CP/KHU_project/Convolution/Source/cs/REELS/k/"
k<-"20"
k_name<-paste(dir_path, "k_", k, ".txt", sep="")
tmp_data<-read.csv(k_name)
diff=nrow(tmp_data)-nrow(data)
tmp_data<-tmp_data[(diff/2):(nrow(tmp_data)-diff/2-1), 1]
data[, 3]<-tmp_data
colnames(data)<-c("eV", "before", "after")
data[, 2]<-scale(data[, 2], center=min(data[, 2]), scale=max(data[, 2])-min(data[, 2]))
data[, 3]<-scale(data[, 3], center=min(data[, 3]), scale=max(data[, 3])-min(data[, 3]))
plot(data[, 1], data[, 2], type='l', xlab="eV", ylab="CPS")
lines(data[, 1], data[, 3], col="blue")
plot(data[a:b, 1], data[a:b, 3], type='l', xlim=rev(range(data[a:b, 1])), ylab="", xlab="eV")
abline(v=c(1.5, 2.5), col="blue")
